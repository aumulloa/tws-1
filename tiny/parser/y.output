State 78 conflicts: 1 shift/reduce


Grammar

    0 $accept: Tiny $end

    1 Tiny: PROGRAM Name ':' Dclns Body Name '.'

    2 Dclns: VAR Dclns_1
    3      | /* empty */

    4 Dclns_1: /* empty */
    5        | Dcln ';' Dclns_1

    6 Dcln: Dcln_1

    7 Dcln_1: Name ':' Type
    8       | Name ',' Dcln_1

    9 Type: INTEGER
   10     | BOOLEAN

   11 Body: BEGINX Body_1

   12 Body_1: Statement END
   13       | Statement ';' Body_1

   14 Statement: Name ASSIGNMENT Expression
   15          | OUTPUT '(' Statement_1
   16          | IF Expression THEN Statement Statement_1_1
   17          | WHILE Expression DO Statement
   18          | Body
   19          | /* empty */

   20 Statement_1_1: /* empty */
   21              | ELSE Statement

   22 Statement_1: Expression ')'
   23            | Expression ',' Statement_1

   24 Expression: Term
   25           | Term GT Term
   26           | Term LT Term
   27           | Term GTE Term
   28           | Term NE Term
   29           | Term EQ Term
   30           | Term LTE Term

   31 Term: ModAndMulDiv
   32     | ModAndMulDiv OR Term
   33     | ModAndMulDiv '+' Term
   34     | ModAndMulDiv '-' Term

   35 ModAndMulDiv: Unary
   36             | Unary MOD ModAndMulDiv
   37             | Unary AND ModAndMulDiv
   38             | Unary '*' ModAndMulDiv
   39             | Unary '/' ModAndMulDiv

   40 Unary: Misc
   41      | NOT Unary
   42      | '+' Unary
   43      | '-' Unary

   44 Misc: Primary
   45     | Primary POW Misc

   46 Primary: READ
   47        | Eof
   48        | Name
   49        | TRUE
   50        | FALSE
   51        | INTEGER_NUM
   52        | '(' Expression ')'

   53 Name: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 52
')' (41) 22 52
'*' (42) 38
'+' (43) 33 42
',' (44) 8 23
'-' (45) 34 43
'.' (46) 1
'/' (47) 39
':' (58) 1 7
';' (59) 5 13
error (256)
END (258) 12
FALSE (259) 50
VAR (260) 2
IDENTIFIER (261) 53
POW (262) 45
IF (263) 16
READ (264) 46
ELSE (265) 21
THEN (266) 16
NE (267) 28
MOD (268) 36
GT (269) 25
EQ (270) 29
WHILE (271) 17
OUTPUT (272) 15
Eof (273) 47
GTE (274) 27
NOT (275) 41
DO (276) 17
BEGINX (277) 11
BOOLEAN (278) 10
INTEGER_NUM (279) 51
TRUE (280) 49
AND (281) 37
INTEGER (282) 9
LTE (283) 30
OR (284) 32
LT (285) 26
ASSIGNMENT (286) 14
PROGRAM (287) 1


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
Tiny (44)
    on left: 1, on right: 0
Dclns (45)
    on left: 2 3, on right: 1
Dclns_1 (46)
    on left: 4 5, on right: 2 5
Dcln (47)
    on left: 6, on right: 5
Dcln_1 (48)
    on left: 7 8, on right: 6 8
Type (49)
    on left: 9 10, on right: 7
Body (50)
    on left: 11, on right: 1 18
Body_1 (51)
    on left: 12 13, on right: 11 13
Statement (52)
    on left: 14 15 16 17 18 19, on right: 12 13 16 17 21
Statement_1_1 (53)
    on left: 20 21, on right: 16
Statement_1 (54)
    on left: 22 23, on right: 15 23
Expression (55)
    on left: 24 25 26 27 28 29 30, on right: 14 16 17 22 23 52
Term (56)
    on left: 31 32 33 34, on right: 24 25 26 27 28 29 30 32 33 34
ModAndMulDiv (57)
    on left: 35 36 37 38 39, on right: 31 32 33 34 36 37 38 39
Unary (58)
    on left: 40 41 42 43, on right: 35 36 37 38 39 41 42 43
Misc (59)
    on left: 44 45, on right: 40 45
Primary (60)
    on left: 46 47 48 49 50 51 52, on right: 44 45
Name (61)
    on left: 53, on right: 1 7 8 14 48


state 0

    0 $accept: . Tiny $end

    PROGRAM  shift, and go to state 1

    Tiny  go to state 2


state 1

    1 Tiny: PROGRAM . Name ':' Dclns Body Name '.'

    IDENTIFIER  shift, and go to state 3

    Name  go to state 4


state 2

    0 $accept: Tiny . $end

    $end  shift, and go to state 5


state 3

   53 Name: IDENTIFIER .

    $default  reduce using rule 53 (Name)


state 4

    1 Tiny: PROGRAM Name . ':' Dclns Body Name '.'

    ':'  shift, and go to state 6


state 5

    0 $accept: Tiny $end .

    $default  accept


state 6

    1 Tiny: PROGRAM Name ':' . Dclns Body Name '.'

    VAR  shift, and go to state 7

    $default  reduce using rule 3 (Dclns)

    Dclns  go to state 8


state 7

    2 Dclns: VAR . Dclns_1

    IDENTIFIER  shift, and go to state 3

    $default  reduce using rule 4 (Dclns_1)

    Dclns_1  go to state 9
    Dcln     go to state 10
    Dcln_1   go to state 11
    Name     go to state 12


state 8

    1 Tiny: PROGRAM Name ':' Dclns . Body Name '.'

    BEGINX  shift, and go to state 13

    Body  go to state 14


state 9

    2 Dclns: VAR Dclns_1 .

    $default  reduce using rule 2 (Dclns)


state 10

    5 Dclns_1: Dcln . ';' Dclns_1

    ';'  shift, and go to state 15


state 11

    6 Dcln: Dcln_1 .

    $default  reduce using rule 6 (Dcln)


state 12

    7 Dcln_1: Name . ':' Type
    8       | Name . ',' Dcln_1

    ':'  shift, and go to state 16
    ','  shift, and go to state 17


state 13

   11 Body: BEGINX . Body_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    OUTPUT      shift, and go to state 20
    BEGINX      shift, and go to state 13

    $default  reduce using rule 19 (Statement)

    Body       go to state 21
    Body_1     go to state 22
    Statement  go to state 23
    Name       go to state 24


state 14

    1 Tiny: PROGRAM Name ':' Dclns Body . Name '.'

    IDENTIFIER  shift, and go to state 3

    Name  go to state 25


state 15

    5 Dclns_1: Dcln ';' . Dclns_1

    IDENTIFIER  shift, and go to state 3

    $default  reduce using rule 4 (Dclns_1)

    Dclns_1  go to state 26
    Dcln     go to state 10
    Dcln_1   go to state 11
    Name     go to state 12


state 16

    7 Dcln_1: Name ':' . Type

    BOOLEAN  shift, and go to state 27
    INTEGER  shift, and go to state 28

    Type  go to state 29


state 17

    8 Dcln_1: Name ',' . Dcln_1

    IDENTIFIER  shift, and go to state 3

    Dcln_1  go to state 30
    Name    go to state 12


state 18

   16 Statement: IF . Expression THEN Statement Statement_1_1

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Expression    go to state 40
    Term          go to state 41
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 19

   17 Statement: WHILE . Expression DO Statement

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Expression    go to state 47
    Term          go to state 41
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 20

   15 Statement: OUTPUT . '(' Statement_1

    '('  shift, and go to state 48


state 21

   18 Statement: Body .

    $default  reduce using rule 18 (Statement)


state 22

   11 Body: BEGINX Body_1 .

    $default  reduce using rule 11 (Body)


state 23

   12 Body_1: Statement . END
   13       | Statement . ';' Body_1

    END  shift, and go to state 49
    ';'  shift, and go to state 50


state 24

   14 Statement: Name . ASSIGNMENT Expression

    ASSIGNMENT  shift, and go to state 51


state 25

    1 Tiny: PROGRAM Name ':' Dclns Body Name . '.'

    '.'  shift, and go to state 52


state 26

    5 Dclns_1: Dcln ';' Dclns_1 .

    $default  reduce using rule 5 (Dclns_1)


state 27

   10 Type: BOOLEAN .

    $default  reduce using rule 10 (Type)


state 28

    9 Type: INTEGER .

    $default  reduce using rule 9 (Type)


state 29

    7 Dcln_1: Name ':' Type .

    $default  reduce using rule 7 (Dcln_1)


state 30

    8 Dcln_1: Name ',' Dcln_1 .

    $default  reduce using rule 8 (Dcln_1)


state 31

   50 Primary: FALSE .

    $default  reduce using rule 50 (Primary)


state 32

   46 Primary: READ .

    $default  reduce using rule 46 (Primary)


state 33

   47 Primary: Eof .

    $default  reduce using rule 47 (Primary)


state 34

   41 Unary: NOT . Unary

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Unary    go to state 53
    Misc     go to state 44
    Primary  go to state 45
    Name     go to state 46


state 35

   51 Primary: INTEGER_NUM .

    $default  reduce using rule 51 (Primary)


state 36

   49 Primary: TRUE .

    $default  reduce using rule 49 (Primary)


state 37

   52 Primary: '(' . Expression ')'

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Expression    go to state 54
    Term          go to state 41
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 38

   42 Unary: '+' . Unary

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Unary    go to state 55
    Misc     go to state 44
    Primary  go to state 45
    Name     go to state 46


state 39

   43 Unary: '-' . Unary

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Unary    go to state 56
    Misc     go to state 44
    Primary  go to state 45
    Name     go to state 46


state 40

   16 Statement: IF Expression . THEN Statement Statement_1_1

    THEN  shift, and go to state 57


state 41

   24 Expression: Term .
   25           | Term . GT Term
   26           | Term . LT Term
   27           | Term . GTE Term
   28           | Term . NE Term
   29           | Term . EQ Term
   30           | Term . LTE Term

    NE   shift, and go to state 58
    GT   shift, and go to state 59
    EQ   shift, and go to state 60
    GTE  shift, and go to state 61
    LTE  shift, and go to state 62
    LT   shift, and go to state 63

    $default  reduce using rule 24 (Expression)


state 42

   31 Term: ModAndMulDiv .
   32     | ModAndMulDiv . OR Term
   33     | ModAndMulDiv . '+' Term
   34     | ModAndMulDiv . '-' Term

    OR   shift, and go to state 64
    '+'  shift, and go to state 65
    '-'  shift, and go to state 66

    $default  reduce using rule 31 (Term)


state 43

   35 ModAndMulDiv: Unary .
   36             | Unary . MOD ModAndMulDiv
   37             | Unary . AND ModAndMulDiv
   38             | Unary . '*' ModAndMulDiv
   39             | Unary . '/' ModAndMulDiv

    MOD  shift, and go to state 67
    AND  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 35 (ModAndMulDiv)


state 44

   40 Unary: Misc .

    $default  reduce using rule 40 (Unary)


state 45

   44 Misc: Primary .
   45     | Primary . POW Misc

    POW  shift, and go to state 71

    $default  reduce using rule 44 (Misc)


state 46

   48 Primary: Name .

    $default  reduce using rule 48 (Primary)


state 47

   17 Statement: WHILE Expression . DO Statement

    DO  shift, and go to state 72


state 48

   15 Statement: OUTPUT '(' . Statement_1

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Statement_1   go to state 73
    Expression    go to state 74
    Term          go to state 41
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 49

   12 Body_1: Statement END .

    $default  reduce using rule 12 (Body_1)


state 50

   13 Body_1: Statement ';' . Body_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    OUTPUT      shift, and go to state 20
    BEGINX      shift, and go to state 13

    $default  reduce using rule 19 (Statement)

    Body       go to state 21
    Body_1     go to state 75
    Statement  go to state 23
    Name       go to state 24


state 51

   14 Statement: Name ASSIGNMENT . Expression

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Expression    go to state 76
    Term          go to state 41
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 52

    1 Tiny: PROGRAM Name ':' Dclns Body Name '.' .

    $default  reduce using rule 1 (Tiny)


state 53

   41 Unary: NOT Unary .

    $default  reduce using rule 41 (Unary)


state 54

   52 Primary: '(' Expression . ')'

    ')'  shift, and go to state 77


state 55

   42 Unary: '+' Unary .

    $default  reduce using rule 42 (Unary)


state 56

   43 Unary: '-' Unary .

    $default  reduce using rule 43 (Unary)


state 57

   16 Statement: IF Expression THEN . Statement Statement_1_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    OUTPUT      shift, and go to state 20
    BEGINX      shift, and go to state 13

    $default  reduce using rule 19 (Statement)

    Body       go to state 21
    Statement  go to state 78
    Name       go to state 24


state 58

   28 Expression: Term NE . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Term          go to state 79
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 59

   25 Expression: Term GT . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Term          go to state 80
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 60

   29 Expression: Term EQ . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Term          go to state 81
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 61

   27 Expression: Term GTE . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Term          go to state 82
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 62

   30 Expression: Term LTE . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Term          go to state 83
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 63

   26 Expression: Term LT . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Term          go to state 84
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 64

   32 Term: ModAndMulDiv OR . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Term          go to state 85
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 65

   33 Term: ModAndMulDiv '+' . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Term          go to state 86
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 66

   34 Term: ModAndMulDiv '-' . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Term          go to state 87
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 67

   36 ModAndMulDiv: Unary MOD . ModAndMulDiv

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    ModAndMulDiv  go to state 88
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 68

   37 ModAndMulDiv: Unary AND . ModAndMulDiv

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    ModAndMulDiv  go to state 89
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 69

   38 ModAndMulDiv: Unary '*' . ModAndMulDiv

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    ModAndMulDiv  go to state 90
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 70

   39 ModAndMulDiv: Unary '/' . ModAndMulDiv

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    ModAndMulDiv  go to state 91
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 71

   45 Misc: Primary POW . Misc

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37

    Misc     go to state 92
    Primary  go to state 45
    Name     go to state 46


state 72

   17 Statement: WHILE Expression DO . Statement

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    OUTPUT      shift, and go to state 20
    BEGINX      shift, and go to state 13

    $default  reduce using rule 19 (Statement)

    Body       go to state 21
    Statement  go to state 93
    Name       go to state 24


state 73

   15 Statement: OUTPUT '(' Statement_1 .

    $default  reduce using rule 15 (Statement)


state 74

   22 Statement_1: Expression . ')'
   23            | Expression . ',' Statement_1

    ','  shift, and go to state 94
    ')'  shift, and go to state 95


state 75

   13 Body_1: Statement ';' Body_1 .

    $default  reduce using rule 13 (Body_1)


state 76

   14 Statement: Name ASSIGNMENT Expression .

    $default  reduce using rule 14 (Statement)


state 77

   52 Primary: '(' Expression ')' .

    $default  reduce using rule 52 (Primary)


state 78

   16 Statement: IF Expression THEN Statement . Statement_1_1

    ELSE  shift, and go to state 96

    ELSE      [reduce using rule 20 (Statement_1_1)]
    $default  reduce using rule 20 (Statement_1_1)

    Statement_1_1  go to state 97


state 79

   28 Expression: Term NE Term .

    $default  reduce using rule 28 (Expression)


state 80

   25 Expression: Term GT Term .

    $default  reduce using rule 25 (Expression)


state 81

   29 Expression: Term EQ Term .

    $default  reduce using rule 29 (Expression)


state 82

   27 Expression: Term GTE Term .

    $default  reduce using rule 27 (Expression)


state 83

   30 Expression: Term LTE Term .

    $default  reduce using rule 30 (Expression)


state 84

   26 Expression: Term LT Term .

    $default  reduce using rule 26 (Expression)


state 85

   32 Term: ModAndMulDiv OR Term .

    $default  reduce using rule 32 (Term)


state 86

   33 Term: ModAndMulDiv '+' Term .

    $default  reduce using rule 33 (Term)


state 87

   34 Term: ModAndMulDiv '-' Term .

    $default  reduce using rule 34 (Term)


state 88

   36 ModAndMulDiv: Unary MOD ModAndMulDiv .

    $default  reduce using rule 36 (ModAndMulDiv)


state 89

   37 ModAndMulDiv: Unary AND ModAndMulDiv .

    $default  reduce using rule 37 (ModAndMulDiv)


state 90

   38 ModAndMulDiv: Unary '*' ModAndMulDiv .

    $default  reduce using rule 38 (ModAndMulDiv)


state 91

   39 ModAndMulDiv: Unary '/' ModAndMulDiv .

    $default  reduce using rule 39 (ModAndMulDiv)


state 92

   45 Misc: Primary POW Misc .

    $default  reduce using rule 45 (Misc)


state 93

   17 Statement: WHILE Expression DO Statement .

    $default  reduce using rule 17 (Statement)


state 94

   23 Statement_1: Expression ',' . Statement_1

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    Eof          shift, and go to state 33
    NOT          shift, and go to state 34
    INTEGER_NUM  shift, and go to state 35
    TRUE         shift, and go to state 36
    '('          shift, and go to state 37
    '+'          shift, and go to state 38
    '-'          shift, and go to state 39

    Statement_1   go to state 98
    Expression    go to state 74
    Term          go to state 41
    ModAndMulDiv  go to state 42
    Unary         go to state 43
    Misc          go to state 44
    Primary       go to state 45
    Name          go to state 46


state 95

   22 Statement_1: Expression ')' .

    $default  reduce using rule 22 (Statement_1)


state 96

   21 Statement_1_1: ELSE . Statement

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    OUTPUT      shift, and go to state 20
    BEGINX      shift, and go to state 13

    $default  reduce using rule 19 (Statement)

    Body       go to state 21
    Statement  go to state 99
    Name       go to state 24


state 97

   16 Statement: IF Expression THEN Statement Statement_1_1 .

    $default  reduce using rule 16 (Statement)


state 98

   23 Statement_1: Expression ',' Statement_1 .

    $default  reduce using rule 23 (Statement_1)


state 99

   21 Statement_1_1: ELSE Statement .

    $default  reduce using rule 21 (Statement_1_1)
