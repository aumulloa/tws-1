State 175 conflicts: 1 shift/reduce


Grammar

    0 $accept: Tiny $end

    1 Tiny: PROGRAM Name ':' Consts TypesRule Dclns SubProgs Body Name '.'

    2 TypesRule: TYPE TypesRule_1
    3          | /* empty */

    4 TypesRule_1: /* empty */
    5            | TypeRule ';' TypesRule_1

    6 TypeRule: Name EQ Name
    7         | Name EQ LitRule

    8 LitRule: '(' LitRule_1

    9 LitRule_1: Name ')'
   10          | Name ',' LitRule_1

   11 Dclns: VAR Dclns_1
   12      | /* empty */

   13 Dclns_1: /* empty */
   14        | Dcln ';' Dclns_1

   15 Dcln: Dcln_1

   16 Dcln_1: Name ':' Name
   17       | Name ',' Dcln_1

   18 Consts: CONST Consts_1
   19       | /* empty */

   20 Consts_1: /* empty */
   21         | ConstDcln ';' Consts_1

   22 ConstDcln: Name EQ ConstVals

   23 ConstVals: INTEGER_NUM
   24          | CHARACTER_ALPHA
   25          | Name

   26 SubProgs: SubProgs_1

   27 SubProgs_1: /* empty */
   28           | FuncsAndProcs SubProgs_1

   29 FuncsAndProcs: PROCEDURE Name OptionalParams ';' Consts TypesRule Dclns Body Name ';'
   30              | FUNCTION Name OptionalParams ':' Name ';' Consts TypesRule Dclns Body Name ';'

   31 OptionalParams: '(' OptionalParams_1
   32               | /* empty */

   33 OptionalParams_1: ')'
   34                 | OptionalParams_1_1

   35 OptionalParams_1_1: Dcln ')'
   36                   | Dcln ';' OptionalParams_1_1

   37 Body: BEGINX Body_1

   38 Body_1: Statement END
   39       | Statement ';' Body_1

   40 Statement: Name ASSIGNMENT Expression
   41          | OUTPUT '(' Statement_1
   42          | IF Expression THEN Statement Statement_1_1
   43          | WHILE Expression DO Statement
   44          | REPEAT Statement_1_1_1
   45          | LOOP Statement_1_1_1_1
   46          | EXIT
   47          | Primary EQSWAP Primary
   48          | FOR Name ASSIGNMENT Expression TO Expression DO Statement
   49          | FOR Name ASSIGNMENT Expression DOWNTO Expression DO Statement
   50          | CASE Expression OF Statement_1_1_1_1_1
   51          | READ '(' Statement_1_1_1_1_1_1
   52          | RETURN Statement_1_1_1_1_1_1_1
   53          | FuncCall
   54          | Body
   55          | /* empty */

   56 Statement_1_1_1_1_1_1_1: /* empty */
   57                        | Expression

   58 Statement_1_1_1_1_1_1: Name ')'
   59                      | Name ',' Statement_1_1_1_1_1_1

   60 Statement_1_1_1_1_1: Statement_1_1_1_1_1_1_1_1
   61                    | CaseClause Statement_1_1_1_1_1

   62 Statement_1_1_1_1_1_1_1_1: END
   63                          | Otherwise END

   64 Statement_1_1_1_1: Statement POOL
   65                  | Statement ';' Statement_1_1_1_1

   66 Statement_1_1_1: Statement UNTIL Expression
   67                | Statement ';' Statement_1_1_1

   68 Statement_1_1: /* empty */
   69              | ELSE Statement

   70 Statement_1: Expression ')'
   71            | Expression ',' Statement_1

   72 Otherwise: OTHERWISE Statement Otherwise_1

   73 Otherwise_1: /* empty */
   74            | ';'

   75 CaseClause: Clause ':' Statement ';'

   76 Clause: Primary
   77       | Primary RANGE Primary

   78 Expression: Term
   79           | Term GT Term
   80           | Term LT Term
   81           | Term GTE Term
   82           | Term NE Term
   83           | Term EQ Term
   84           | Term LTE Term

   85 Term: ModAndMulDiv
   86     | ModAndMulDiv OR Term
   87     | ModAndMulDiv '+' Term
   88     | ModAndMulDiv '-' Term

   89 ModAndMulDiv: Unary
   90             | Unary MOD ModAndMulDiv
   91             | Unary AND ModAndMulDiv
   92             | Unary '*' ModAndMulDiv
   93             | Unary '/' ModAndMulDiv

   94 Unary: Misc
   95      | NOT Unary
   96      | '+' Unary
   97      | '-' Unary

   98 Misc: Primary
   99     | Primary POW Misc

  100 Primary: Eof
  101        | Name
  102        | INTEGER_NUM
  103        | CHARACTER_ALPHA
  104        | PRED '(' Expression ')'
  105        | SUCC '(' Expression ')'
  106        | CHR '(' Expression ')'
  107        | ORD '(' Expression ')'
  108        | STR_ALPHA
  109        | FuncCall
  110        | '(' Expression ')'

  111 Name: IDENTIFIER
  112     | CAPIDENTIFIER

  113 FuncCall: Name '(' FuncCall_1

  114 FuncCall_1: ')'
  115           | FuncCall_1_1

  116 FuncCall_1_1: Expression ')'
  117             | Expression ',' FuncCall_1_1


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 31 41 51 104 105 106 107 110 113
')' (41) 9 33 35 58 70 104 105 106 107 110 114 116
'*' (42) 92
'+' (43) 87 96
',' (44) 10 17 59 71 117
'-' (45) 88 97
'.' (46) 1
'/' (47) 93
':' (58) 1 16 30 75
';' (59) 5 14 21 29 30 36 39 65 67 74 75
error (256)
END (258) 38 62 63
TO (259) 48
EQSWAP (260) 47
VAR (261) 11
IDENTIFIER (262) 111
CHR (263) 106
POW (264) 99
POOL (265) 64
IF (266) 42
FUNCTION (267) 30
CHARACTER_ALPHA (268) 24 103
STR_ALPHA (269) 108
READ (270) 51
REPEAT (271) 44
RANGE (272) 77
ELSE (273) 69
RETURN (274) 52
CAPIDENTIFIER (275) 112
UNTIL (276) 66
FOR (277) 48 49
THEN (278) 42
OF (279) 50
NE (280) 82
MOD (281) 90
GT (282) 79
CASE (283) 50
WHILE (284) 43
OUTPUT (285) 41
EQ (286) 6 7 22 83
EXIT (287) 46
PROCEDURE (288) 29
CONST (289) 18
Eof (290) 100
GTE (291) 81
PRED (292) 104
NOT (293) 95
DO (294) 43 48 49
BEGINX (295) 37
ORD (296) 107
AND (297) 91
INTEGER_NUM (298) 23 102
LTE (299) 84
LOOP (300) 45
SUCC (301) 105
TYPE (302) 2
OR (303) 86
LT (304) 80
OTHERWISE (305) 72
ASSIGNMENT (306) 40 48 49
PROGRAM (307) 1
DOWNTO (308) 49


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
Tiny (65)
    on left: 1, on right: 0
TypesRule (66)
    on left: 2 3, on right: 1 29 30
TypesRule_1 (67)
    on left: 4 5, on right: 2 5
TypeRule (68)
    on left: 6 7, on right: 5
LitRule (69)
    on left: 8, on right: 7
LitRule_1 (70)
    on left: 9 10, on right: 8 10
Dclns (71)
    on left: 11 12, on right: 1 29 30
Dclns_1 (72)
    on left: 13 14, on right: 11 14
Dcln (73)
    on left: 15, on right: 14 35 36
Dcln_1 (74)
    on left: 16 17, on right: 15 17
Consts (75)
    on left: 18 19, on right: 1 29 30
Consts_1 (76)
    on left: 20 21, on right: 18 21
ConstDcln (77)
    on left: 22, on right: 21
ConstVals (78)
    on left: 23 24 25, on right: 22
SubProgs (79)
    on left: 26, on right: 1
SubProgs_1 (80)
    on left: 27 28, on right: 26 28
FuncsAndProcs (81)
    on left: 29 30, on right: 28
OptionalParams (82)
    on left: 31 32, on right: 29 30
OptionalParams_1 (83)
    on left: 33 34, on right: 31
OptionalParams_1_1 (84)
    on left: 35 36, on right: 34 36
Body (85)
    on left: 37, on right: 1 29 30 54
Body_1 (86)
    on left: 38 39, on right: 37 39
Statement (87)
    on left: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55,
    on right: 38 39 42 43 48 49 64 65 66 67 69 72 75
Statement_1_1_1_1_1_1_1 (88)
    on left: 56 57, on right: 52
Statement_1_1_1_1_1_1 (89)
    on left: 58 59, on right: 51 59
Statement_1_1_1_1_1 (90)
    on left: 60 61, on right: 50 61
Statement_1_1_1_1_1_1_1_1 (91)
    on left: 62 63, on right: 60
Statement_1_1_1_1 (92)
    on left: 64 65, on right: 45 65
Statement_1_1_1 (93)
    on left: 66 67, on right: 44 67
Statement_1_1 (94)
    on left: 68 69, on right: 42
Statement_1 (95)
    on left: 70 71, on right: 41 71
Otherwise (96)
    on left: 72, on right: 63
Otherwise_1 (97)
    on left: 73 74, on right: 72
CaseClause (98)
    on left: 75, on right: 61
Clause (99)
    on left: 76 77, on right: 75
Expression (100)
    on left: 78 79 80 81 82 83 84, on right: 40 42 43 48 49 50 57 66
    70 71 104 105 106 107 110 116 117
Term (101)
    on left: 85 86 87 88, on right: 78 79 80 81 82 83 84 86 87 88
ModAndMulDiv (102)
    on left: 89 90 91 92 93, on right: 85 86 87 88 90 91 92 93
Unary (103)
    on left: 94 95 96 97, on right: 89 90 91 92 93 95 96 97
Misc (104)
    on left: 98 99, on right: 94 99
Primary (105)
    on left: 100 101 102 103 104 105 106 107 108 109 110,
    on right: 47 76 77 98 99
Name (106)
    on left: 111 112, on right: 1 6 7 9 10 16 17 22 25 29 30 40 48
    49 58 59 101 113
FuncCall (107)
    on left: 113, on right: 53 109
FuncCall_1 (108)
    on left: 114 115, on right: 113
FuncCall_1_1 (109)
    on left: 116 117, on right: 115 117


state 0

    0 $accept: . Tiny $end

    PROGRAM  shift, and go to state 1

    Tiny  go to state 2


state 1

    1 Tiny: PROGRAM . Name ':' Consts TypesRule Dclns SubProgs Body Name '.'

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Name  go to state 5


state 2

    0 $accept: Tiny . $end

    $end  shift, and go to state 6


state 3

  111 Name: IDENTIFIER .

    $default  reduce using rule 111 (Name)


state 4

  112 Name: CAPIDENTIFIER .

    $default  reduce using rule 112 (Name)


state 5

    1 Tiny: PROGRAM Name . ':' Consts TypesRule Dclns SubProgs Body Name '.'

    ':'  shift, and go to state 7


state 6

    0 $accept: Tiny $end .

    $default  accept


state 7

    1 Tiny: PROGRAM Name ':' . Consts TypesRule Dclns SubProgs Body Name '.'

    CONST  shift, and go to state 8

    $default  reduce using rule 19 (Consts)

    Consts  go to state 9


state 8

   18 Consts: CONST . Consts_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    $default  reduce using rule 20 (Consts_1)

    Consts_1   go to state 10
    ConstDcln  go to state 11
    Name       go to state 12


state 9

    1 Tiny: PROGRAM Name ':' Consts . TypesRule Dclns SubProgs Body Name '.'

    TYPE  shift, and go to state 13

    $default  reduce using rule 3 (TypesRule)

    TypesRule  go to state 14


state 10

   18 Consts: CONST Consts_1 .

    $default  reduce using rule 18 (Consts)


state 11

   21 Consts_1: ConstDcln . ';' Consts_1

    ';'  shift, and go to state 15


state 12

   22 ConstDcln: Name . EQ ConstVals

    EQ  shift, and go to state 16


state 13

    2 TypesRule: TYPE . TypesRule_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    $default  reduce using rule 4 (TypesRule_1)

    TypesRule_1  go to state 17
    TypeRule     go to state 18
    Name         go to state 19


state 14

    1 Tiny: PROGRAM Name ':' Consts TypesRule . Dclns SubProgs Body Name '.'

    VAR  shift, and go to state 20

    $default  reduce using rule 12 (Dclns)

    Dclns  go to state 21


state 15

   21 Consts_1: ConstDcln ';' . Consts_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    $default  reduce using rule 20 (Consts_1)

    Consts_1   go to state 22
    ConstDcln  go to state 11
    Name       go to state 12


state 16

   22 ConstDcln: Name EQ . ConstVals

    IDENTIFIER       shift, and go to state 3
    CHARACTER_ALPHA  shift, and go to state 23
    CAPIDENTIFIER    shift, and go to state 4
    INTEGER_NUM      shift, and go to state 24

    ConstVals  go to state 25
    Name       go to state 26


state 17

    2 TypesRule: TYPE TypesRule_1 .

    $default  reduce using rule 2 (TypesRule)


state 18

    5 TypesRule_1: TypeRule . ';' TypesRule_1

    ';'  shift, and go to state 27


state 19

    6 TypeRule: Name . EQ Name
    7         | Name . EQ LitRule

    EQ  shift, and go to state 28


state 20

   11 Dclns: VAR . Dclns_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    $default  reduce using rule 13 (Dclns_1)

    Dclns_1  go to state 29
    Dcln     go to state 30
    Dcln_1   go to state 31
    Name     go to state 32


state 21

    1 Tiny: PROGRAM Name ':' Consts TypesRule Dclns . SubProgs Body Name '.'

    FUNCTION   shift, and go to state 33
    PROCEDURE  shift, and go to state 34

    $default  reduce using rule 27 (SubProgs_1)

    SubProgs       go to state 35
    SubProgs_1     go to state 36
    FuncsAndProcs  go to state 37


state 22

   21 Consts_1: ConstDcln ';' Consts_1 .

    $default  reduce using rule 21 (Consts_1)


state 23

   24 ConstVals: CHARACTER_ALPHA .

    $default  reduce using rule 24 (ConstVals)


state 24

   23 ConstVals: INTEGER_NUM .

    $default  reduce using rule 23 (ConstVals)


state 25

   22 ConstDcln: Name EQ ConstVals .

    $default  reduce using rule 22 (ConstDcln)


state 26

   25 ConstVals: Name .

    $default  reduce using rule 25 (ConstVals)


state 27

    5 TypesRule_1: TypeRule ';' . TypesRule_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    $default  reduce using rule 4 (TypesRule_1)

    TypesRule_1  go to state 38
    TypeRule     go to state 18
    Name         go to state 19


state 28

    6 TypeRule: Name EQ . Name
    7         | Name EQ . LitRule

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4
    '('            shift, and go to state 39

    LitRule  go to state 40
    Name     go to state 41


state 29

   11 Dclns: VAR Dclns_1 .

    $default  reduce using rule 11 (Dclns)


state 30

   14 Dclns_1: Dcln . ';' Dclns_1

    ';'  shift, and go to state 42


state 31

   15 Dcln: Dcln_1 .

    $default  reduce using rule 15 (Dcln)


state 32

   16 Dcln_1: Name . ':' Name
   17       | Name . ',' Dcln_1

    ':'  shift, and go to state 43
    ','  shift, and go to state 44


state 33

   30 FuncsAndProcs: FUNCTION . Name OptionalParams ':' Name ';' Consts TypesRule Dclns Body Name ';'

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Name  go to state 45


state 34

   29 FuncsAndProcs: PROCEDURE . Name OptionalParams ';' Consts TypesRule Dclns Body Name ';'

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Name  go to state 46


state 35

    1 Tiny: PROGRAM Name ':' Consts TypesRule Dclns SubProgs . Body Name '.'

    BEGINX  shift, and go to state 47

    Body  go to state 48


state 36

   26 SubProgs: SubProgs_1 .

    $default  reduce using rule 26 (SubProgs)


state 37

   28 SubProgs_1: FuncsAndProcs . SubProgs_1

    FUNCTION   shift, and go to state 33
    PROCEDURE  shift, and go to state 34

    $default  reduce using rule 27 (SubProgs_1)

    SubProgs_1     go to state 49
    FuncsAndProcs  go to state 37


state 38

    5 TypesRule_1: TypeRule ';' TypesRule_1 .

    $default  reduce using rule 5 (TypesRule_1)


state 39

    8 LitRule: '(' . LitRule_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    LitRule_1  go to state 50
    Name       go to state 51


state 40

    7 TypeRule: Name EQ LitRule .

    $default  reduce using rule 7 (TypeRule)


state 41

    6 TypeRule: Name EQ Name .

    $default  reduce using rule 6 (TypeRule)


state 42

   14 Dclns_1: Dcln ';' . Dclns_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    $default  reduce using rule 13 (Dclns_1)

    Dclns_1  go to state 52
    Dcln     go to state 30
    Dcln_1   go to state 31
    Name     go to state 32


state 43

   16 Dcln_1: Name ':' . Name

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Name  go to state 53


state 44

   17 Dcln_1: Name ',' . Dcln_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Dcln_1  go to state 54
    Name    go to state 32


state 45

   30 FuncsAndProcs: FUNCTION Name . OptionalParams ':' Name ';' Consts TypesRule Dclns Body Name ';'

    '('  shift, and go to state 55

    $default  reduce using rule 32 (OptionalParams)

    OptionalParams  go to state 56


state 46

   29 FuncsAndProcs: PROCEDURE Name . OptionalParams ';' Consts TypesRule Dclns Body Name ';'

    '('  shift, and go to state 55

    $default  reduce using rule 32 (OptionalParams)

    OptionalParams  go to state 57


state 47

   37 Body: BEGINX . Body_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body       go to state 77
    Body_1     go to state 78
    Statement  go to state 79
    Primary    go to state 80
    Name       go to state 81
    FuncCall   go to state 82


state 48

    1 Tiny: PROGRAM Name ':' Consts TypesRule Dclns SubProgs Body . Name '.'

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Name  go to state 83


state 49

   28 SubProgs_1: FuncsAndProcs SubProgs_1 .

    $default  reduce using rule 28 (SubProgs_1)


state 50

    8 LitRule: '(' LitRule_1 .

    $default  reduce using rule 8 (LitRule)


state 51

    9 LitRule_1: Name . ')'
   10          | Name . ',' LitRule_1

    ')'  shift, and go to state 84
    ','  shift, and go to state 85


state 52

   14 Dclns_1: Dcln ';' Dclns_1 .

    $default  reduce using rule 14 (Dclns_1)


state 53

   16 Dcln_1: Name ':' Name .

    $default  reduce using rule 16 (Dcln_1)


state 54

   17 Dcln_1: Name ',' Dcln_1 .

    $default  reduce using rule 17 (Dcln_1)


state 55

   31 OptionalParams: '(' . OptionalParams_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4
    ')'            shift, and go to state 86

    Dcln                go to state 87
    Dcln_1              go to state 31
    OptionalParams_1    go to state 88
    OptionalParams_1_1  go to state 89
    Name                go to state 32


state 56

   30 FuncsAndProcs: FUNCTION Name OptionalParams . ':' Name ';' Consts TypesRule Dclns Body Name ';'

    ':'  shift, and go to state 90


state 57

   29 FuncsAndProcs: PROCEDURE Name OptionalParams . ';' Consts TypesRule Dclns Body Name ';'

    ';'  shift, and go to state 91


state 58

  106 Primary: CHR . '(' Expression ')'

    '('  shift, and go to state 92


state 59

   42 Statement: IF . Expression THEN Statement Statement_1_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 96
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 60

  103 Primary: CHARACTER_ALPHA .

    $default  reduce using rule 103 (Primary)


state 61

  108 Primary: STR_ALPHA .

    $default  reduce using rule 108 (Primary)


state 62

   51 Statement: READ . '(' Statement_1_1_1_1_1_1

    '('  shift, and go to state 104


state 63

   44 Statement: REPEAT . Statement_1_1_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body             go to state 77
    Statement        go to state 105
    Statement_1_1_1  go to state 106
    Primary          go to state 80
    Name             go to state 81
    FuncCall         go to state 82


state 64

   52 Statement: RETURN . Statement_1_1_1_1_1_1_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    $default  reduce using rule 56 (Statement_1_1_1_1_1_1_1)

    Statement_1_1_1_1_1_1_1  go to state 107
    Expression               go to state 108
    Term                     go to state 97
    ModAndMulDiv             go to state 98
    Unary                    go to state 99
    Misc                     go to state 100
    Primary                  go to state 101
    Name                     go to state 102
    FuncCall                 go to state 103


state 65

   48 Statement: FOR . Name ASSIGNMENT Expression TO Expression DO Statement
   49          | FOR . Name ASSIGNMENT Expression DOWNTO Expression DO Statement

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Name  go to state 109


state 66

   50 Statement: CASE . Expression OF Statement_1_1_1_1_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 110
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 67

   43 Statement: WHILE . Expression DO Statement

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 111
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 68

   41 Statement: OUTPUT . '(' Statement_1

    '('  shift, and go to state 112


state 69

   46 Statement: EXIT .

    $default  reduce using rule 46 (Statement)


state 70

  100 Primary: Eof .

    $default  reduce using rule 100 (Primary)


state 71

  104 Primary: PRED . '(' Expression ')'

    '('  shift, and go to state 113


state 72

  107 Primary: ORD . '(' Expression ')'

    '('  shift, and go to state 114


state 73

  102 Primary: INTEGER_NUM .

    $default  reduce using rule 102 (Primary)


state 74

   45 Statement: LOOP . Statement_1_1_1_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body               go to state 77
    Statement          go to state 115
    Statement_1_1_1_1  go to state 116
    Primary            go to state 80
    Name               go to state 81
    FuncCall           go to state 82


state 75

  105 Primary: SUCC . '(' Expression ')'

    '('  shift, and go to state 117


state 76

  110 Primary: '(' . Expression ')'

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 118
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 77

   54 Statement: Body .

    $default  reduce using rule 54 (Statement)


state 78

   37 Body: BEGINX Body_1 .

    $default  reduce using rule 37 (Body)


state 79

   38 Body_1: Statement . END
   39       | Statement . ';' Body_1

    END  shift, and go to state 119
    ';'  shift, and go to state 120


state 80

   47 Statement: Primary . EQSWAP Primary

    EQSWAP  shift, and go to state 121


state 81

   40 Statement: Name . ASSIGNMENT Expression
  101 Primary: Name .
  113 FuncCall: Name . '(' FuncCall_1

    ASSIGNMENT  shift, and go to state 122
    '('         shift, and go to state 123

    $default  reduce using rule 101 (Primary)


state 82

   53 Statement: FuncCall .
  109 Primary: FuncCall .

    EQSWAP    reduce using rule 109 (Primary)
    $default  reduce using rule 53 (Statement)


state 83

    1 Tiny: PROGRAM Name ':' Consts TypesRule Dclns SubProgs Body Name . '.'

    '.'  shift, and go to state 124


state 84

    9 LitRule_1: Name ')' .

    $default  reduce using rule 9 (LitRule_1)


state 85

   10 LitRule_1: Name ',' . LitRule_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    LitRule_1  go to state 125
    Name       go to state 51


state 86

   33 OptionalParams_1: ')' .

    $default  reduce using rule 33 (OptionalParams_1)


state 87

   35 OptionalParams_1_1: Dcln . ')'
   36                   | Dcln . ';' OptionalParams_1_1

    ';'  shift, and go to state 126
    ')'  shift, and go to state 127


state 88

   31 OptionalParams: '(' OptionalParams_1 .

    $default  reduce using rule 31 (OptionalParams)


state 89

   34 OptionalParams_1: OptionalParams_1_1 .

    $default  reduce using rule 34 (OptionalParams_1)


state 90

   30 FuncsAndProcs: FUNCTION Name OptionalParams ':' . Name ';' Consts TypesRule Dclns Body Name ';'

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Name  go to state 128


state 91

   29 FuncsAndProcs: PROCEDURE Name OptionalParams ';' . Consts TypesRule Dclns Body Name ';'

    CONST  shift, and go to state 8

    $default  reduce using rule 19 (Consts)

    Consts  go to state 129


state 92

  106 Primary: CHR '(' . Expression ')'

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 130
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 93

   95 Unary: NOT . Unary

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Unary     go to state 131
    Misc      go to state 100
    Primary   go to state 101
    Name      go to state 102
    FuncCall  go to state 103


state 94

   96 Unary: '+' . Unary

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Unary     go to state 132
    Misc      go to state 100
    Primary   go to state 101
    Name      go to state 102
    FuncCall  go to state 103


state 95

   97 Unary: '-' . Unary

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Unary     go to state 133
    Misc      go to state 100
    Primary   go to state 101
    Name      go to state 102
    FuncCall  go to state 103


state 96

   42 Statement: IF Expression . THEN Statement Statement_1_1

    THEN  shift, and go to state 134


state 97

   78 Expression: Term .
   79           | Term . GT Term
   80           | Term . LT Term
   81           | Term . GTE Term
   82           | Term . NE Term
   83           | Term . EQ Term
   84           | Term . LTE Term

    NE   shift, and go to state 135
    GT   shift, and go to state 136
    EQ   shift, and go to state 137
    GTE  shift, and go to state 138
    LTE  shift, and go to state 139
    LT   shift, and go to state 140

    $default  reduce using rule 78 (Expression)


state 98

   85 Term: ModAndMulDiv .
   86     | ModAndMulDiv . OR Term
   87     | ModAndMulDiv . '+' Term
   88     | ModAndMulDiv . '-' Term

    OR   shift, and go to state 141
    '+'  shift, and go to state 142
    '-'  shift, and go to state 143

    $default  reduce using rule 85 (Term)


state 99

   89 ModAndMulDiv: Unary .
   90             | Unary . MOD ModAndMulDiv
   91             | Unary . AND ModAndMulDiv
   92             | Unary . '*' ModAndMulDiv
   93             | Unary . '/' ModAndMulDiv

    MOD  shift, and go to state 144
    AND  shift, and go to state 145
    '*'  shift, and go to state 146
    '/'  shift, and go to state 147

    $default  reduce using rule 89 (ModAndMulDiv)


state 100

   94 Unary: Misc .

    $default  reduce using rule 94 (Unary)


state 101

   98 Misc: Primary .
   99     | Primary . POW Misc

    POW  shift, and go to state 148

    $default  reduce using rule 98 (Misc)


state 102

  101 Primary: Name .
  113 FuncCall: Name . '(' FuncCall_1

    '('  shift, and go to state 123

    $default  reduce using rule 101 (Primary)


state 103

  109 Primary: FuncCall .

    $default  reduce using rule 109 (Primary)


state 104

   51 Statement: READ '(' . Statement_1_1_1_1_1_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Statement_1_1_1_1_1_1  go to state 149
    Name                   go to state 150


state 105

   66 Statement_1_1_1: Statement . UNTIL Expression
   67                | Statement . ';' Statement_1_1_1

    UNTIL  shift, and go to state 151
    ';'    shift, and go to state 152


state 106

   44 Statement: REPEAT Statement_1_1_1 .

    $default  reduce using rule 44 (Statement)


state 107

   52 Statement: RETURN Statement_1_1_1_1_1_1_1 .

    $default  reduce using rule 52 (Statement)


state 108

   57 Statement_1_1_1_1_1_1_1: Expression .

    $default  reduce using rule 57 (Statement_1_1_1_1_1_1_1)


state 109

   48 Statement: FOR Name . ASSIGNMENT Expression TO Expression DO Statement
   49          | FOR Name . ASSIGNMENT Expression DOWNTO Expression DO Statement

    ASSIGNMENT  shift, and go to state 153


state 110

   50 Statement: CASE Expression . OF Statement_1_1_1_1_1

    OF  shift, and go to state 154


state 111

   43 Statement: WHILE Expression . DO Statement

    DO  shift, and go to state 155


state 112

   41 Statement: OUTPUT '(' . Statement_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Statement_1   go to state 156
    Expression    go to state 157
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 113

  104 Primary: PRED '(' . Expression ')'

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 158
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 114

  107 Primary: ORD '(' . Expression ')'

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 159
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 115

   64 Statement_1_1_1_1: Statement . POOL
   65                  | Statement . ';' Statement_1_1_1_1

    POOL  shift, and go to state 160
    ';'   shift, and go to state 161


state 116

   45 Statement: LOOP Statement_1_1_1_1 .

    $default  reduce using rule 45 (Statement)


state 117

  105 Primary: SUCC '(' . Expression ')'

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 162
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 118

  110 Primary: '(' Expression . ')'

    ')'  shift, and go to state 163


state 119

   38 Body_1: Statement END .

    $default  reduce using rule 38 (Body_1)


state 120

   39 Body_1: Statement ';' . Body_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body       go to state 77
    Body_1     go to state 164
    Statement  go to state 79
    Primary    go to state 80
    Name       go to state 81
    FuncCall   go to state 82


state 121

   47 Statement: Primary EQSWAP . Primary

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    Primary   go to state 165
    Name      go to state 102
    FuncCall  go to state 103


state 122

   40 Statement: Name ASSIGNMENT . Expression

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 166
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 123

  113 FuncCall: Name '(' . FuncCall_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    ')'              shift, and go to state 167
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 168
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103
    FuncCall_1    go to state 169
    FuncCall_1_1  go to state 170


state 124

    1 Tiny: PROGRAM Name ':' Consts TypesRule Dclns SubProgs Body Name '.' .

    $default  reduce using rule 1 (Tiny)


state 125

   10 LitRule_1: Name ',' LitRule_1 .

    $default  reduce using rule 10 (LitRule_1)


state 126

   36 OptionalParams_1_1: Dcln ';' . OptionalParams_1_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Dcln                go to state 87
    Dcln_1              go to state 31
    OptionalParams_1_1  go to state 171
    Name                go to state 32


state 127

   35 OptionalParams_1_1: Dcln ')' .

    $default  reduce using rule 35 (OptionalParams_1_1)


state 128

   30 FuncsAndProcs: FUNCTION Name OptionalParams ':' Name . ';' Consts TypesRule Dclns Body Name ';'

    ';'  shift, and go to state 172


state 129

   29 FuncsAndProcs: PROCEDURE Name OptionalParams ';' Consts . TypesRule Dclns Body Name ';'

    TYPE  shift, and go to state 13

    $default  reduce using rule 3 (TypesRule)

    TypesRule  go to state 173


state 130

  106 Primary: CHR '(' Expression . ')'

    ')'  shift, and go to state 174


state 131

   95 Unary: NOT Unary .

    $default  reduce using rule 95 (Unary)


state 132

   96 Unary: '+' Unary .

    $default  reduce using rule 96 (Unary)


state 133

   97 Unary: '-' Unary .

    $default  reduce using rule 97 (Unary)


state 134

   42 Statement: IF Expression THEN . Statement Statement_1_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body       go to state 77
    Statement  go to state 175
    Primary    go to state 80
    Name       go to state 81
    FuncCall   go to state 82


state 135

   82 Expression: Term NE . Term

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Term          go to state 176
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 136

   79 Expression: Term GT . Term

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Term          go to state 177
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 137

   83 Expression: Term EQ . Term

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Term          go to state 178
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 138

   81 Expression: Term GTE . Term

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Term          go to state 179
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 139

   84 Expression: Term LTE . Term

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Term          go to state 180
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 140

   80 Expression: Term LT . Term

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Term          go to state 181
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 141

   86 Term: ModAndMulDiv OR . Term

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Term          go to state 182
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 142

   87 Term: ModAndMulDiv '+' . Term

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Term          go to state 183
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 143

   88 Term: ModAndMulDiv '-' . Term

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Term          go to state 184
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 144

   90 ModAndMulDiv: Unary MOD . ModAndMulDiv

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    ModAndMulDiv  go to state 185
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 145

   91 ModAndMulDiv: Unary AND . ModAndMulDiv

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    ModAndMulDiv  go to state 186
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 146

   92 ModAndMulDiv: Unary '*' . ModAndMulDiv

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    ModAndMulDiv  go to state 187
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 147

   93 ModAndMulDiv: Unary '/' . ModAndMulDiv

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    ModAndMulDiv  go to state 188
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 148

   99 Misc: Primary POW . Misc

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    Misc      go to state 189
    Primary   go to state 101
    Name      go to state 102
    FuncCall  go to state 103


state 149

   51 Statement: READ '(' Statement_1_1_1_1_1_1 .

    $default  reduce using rule 51 (Statement)


state 150

   58 Statement_1_1_1_1_1_1: Name . ')'
   59                      | Name . ',' Statement_1_1_1_1_1_1

    ')'  shift, and go to state 190
    ','  shift, and go to state 191


state 151

   66 Statement_1_1_1: Statement UNTIL . Expression

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 192
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 152

   67 Statement_1_1_1: Statement ';' . Statement_1_1_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body             go to state 77
    Statement        go to state 105
    Statement_1_1_1  go to state 193
    Primary          go to state 80
    Name             go to state 81
    FuncCall         go to state 82


state 153

   48 Statement: FOR Name ASSIGNMENT . Expression TO Expression DO Statement
   49          | FOR Name ASSIGNMENT . Expression DOWNTO Expression DO Statement

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 194
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 154

   50 Statement: CASE Expression OF . Statement_1_1_1_1_1

    END              shift, and go to state 195
    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    OTHERWISE        shift, and go to state 196
    '('              shift, and go to state 76

    Statement_1_1_1_1_1        go to state 197
    Statement_1_1_1_1_1_1_1_1  go to state 198
    Otherwise                  go to state 199
    CaseClause                 go to state 200
    Clause                     go to state 201
    Primary                    go to state 202
    Name                       go to state 102
    FuncCall                   go to state 103


state 155

   43 Statement: WHILE Expression DO . Statement

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body       go to state 77
    Statement  go to state 203
    Primary    go to state 80
    Name       go to state 81
    FuncCall   go to state 82


state 156

   41 Statement: OUTPUT '(' Statement_1 .

    $default  reduce using rule 41 (Statement)


state 157

   70 Statement_1: Expression . ')'
   71            | Expression . ',' Statement_1

    ')'  shift, and go to state 204
    ','  shift, and go to state 205


state 158

  104 Primary: PRED '(' Expression . ')'

    ')'  shift, and go to state 206


state 159

  107 Primary: ORD '(' Expression . ')'

    ')'  shift, and go to state 207


state 160

   64 Statement_1_1_1_1: Statement POOL .

    $default  reduce using rule 64 (Statement_1_1_1_1)


state 161

   65 Statement_1_1_1_1: Statement ';' . Statement_1_1_1_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body               go to state 77
    Statement          go to state 115
    Statement_1_1_1_1  go to state 208
    Primary            go to state 80
    Name               go to state 81
    FuncCall           go to state 82


state 162

  105 Primary: SUCC '(' Expression . ')'

    ')'  shift, and go to state 209


state 163

  110 Primary: '(' Expression ')' .

    $default  reduce using rule 110 (Primary)


state 164

   39 Body_1: Statement ';' Body_1 .

    $default  reduce using rule 39 (Body_1)


state 165

   47 Statement: Primary EQSWAP Primary .

    $default  reduce using rule 47 (Statement)


state 166

   40 Statement: Name ASSIGNMENT Expression .

    $default  reduce using rule 40 (Statement)


state 167

  114 FuncCall_1: ')' .

    $default  reduce using rule 114 (FuncCall_1)


state 168

  116 FuncCall_1_1: Expression . ')'
  117             | Expression . ',' FuncCall_1_1

    ')'  shift, and go to state 210
    ','  shift, and go to state 211


state 169

  113 FuncCall: Name '(' FuncCall_1 .

    $default  reduce using rule 113 (FuncCall)


state 170

  115 FuncCall_1: FuncCall_1_1 .

    $default  reduce using rule 115 (FuncCall_1)


state 171

   36 OptionalParams_1_1: Dcln ';' OptionalParams_1_1 .

    $default  reduce using rule 36 (OptionalParams_1_1)


state 172

   30 FuncsAndProcs: FUNCTION Name OptionalParams ':' Name ';' . Consts TypesRule Dclns Body Name ';'

    CONST  shift, and go to state 8

    $default  reduce using rule 19 (Consts)

    Consts  go to state 212


state 173

   29 FuncsAndProcs: PROCEDURE Name OptionalParams ';' Consts TypesRule . Dclns Body Name ';'

    VAR  shift, and go to state 20

    $default  reduce using rule 12 (Dclns)

    Dclns  go to state 213


state 174

  106 Primary: CHR '(' Expression ')' .

    $default  reduce using rule 106 (Primary)


state 175

   42 Statement: IF Expression THEN Statement . Statement_1_1

    ELSE  shift, and go to state 214

    ELSE      [reduce using rule 68 (Statement_1_1)]
    $default  reduce using rule 68 (Statement_1_1)

    Statement_1_1  go to state 215


state 176

   82 Expression: Term NE Term .

    $default  reduce using rule 82 (Expression)


state 177

   79 Expression: Term GT Term .

    $default  reduce using rule 79 (Expression)


state 178

   83 Expression: Term EQ Term .

    $default  reduce using rule 83 (Expression)


state 179

   81 Expression: Term GTE Term .

    $default  reduce using rule 81 (Expression)


state 180

   84 Expression: Term LTE Term .

    $default  reduce using rule 84 (Expression)


state 181

   80 Expression: Term LT Term .

    $default  reduce using rule 80 (Expression)


state 182

   86 Term: ModAndMulDiv OR Term .

    $default  reduce using rule 86 (Term)


state 183

   87 Term: ModAndMulDiv '+' Term .

    $default  reduce using rule 87 (Term)


state 184

   88 Term: ModAndMulDiv '-' Term .

    $default  reduce using rule 88 (Term)


state 185

   90 ModAndMulDiv: Unary MOD ModAndMulDiv .

    $default  reduce using rule 90 (ModAndMulDiv)


state 186

   91 ModAndMulDiv: Unary AND ModAndMulDiv .

    $default  reduce using rule 91 (ModAndMulDiv)


state 187

   92 ModAndMulDiv: Unary '*' ModAndMulDiv .

    $default  reduce using rule 92 (ModAndMulDiv)


state 188

   93 ModAndMulDiv: Unary '/' ModAndMulDiv .

    $default  reduce using rule 93 (ModAndMulDiv)


state 189

   99 Misc: Primary POW Misc .

    $default  reduce using rule 99 (Misc)


state 190

   58 Statement_1_1_1_1_1_1: Name ')' .

    $default  reduce using rule 58 (Statement_1_1_1_1_1_1)


state 191

   59 Statement_1_1_1_1_1_1: Name ',' . Statement_1_1_1_1_1_1

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Statement_1_1_1_1_1_1  go to state 216
    Name                   go to state 150


state 192

   66 Statement_1_1_1: Statement UNTIL Expression .

    $default  reduce using rule 66 (Statement_1_1_1)


state 193

   67 Statement_1_1_1: Statement ';' Statement_1_1_1 .

    $default  reduce using rule 67 (Statement_1_1_1)


state 194

   48 Statement: FOR Name ASSIGNMENT Expression . TO Expression DO Statement
   49          | FOR Name ASSIGNMENT Expression . DOWNTO Expression DO Statement

    TO      shift, and go to state 217
    DOWNTO  shift, and go to state 218


state 195

   62 Statement_1_1_1_1_1_1_1_1: END .

    $default  reduce using rule 62 (Statement_1_1_1_1_1_1_1_1)


state 196

   72 Otherwise: OTHERWISE . Statement Otherwise_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body       go to state 77
    Statement  go to state 219
    Primary    go to state 80
    Name       go to state 81
    FuncCall   go to state 82


state 197

   50 Statement: CASE Expression OF Statement_1_1_1_1_1 .

    $default  reduce using rule 50 (Statement)


state 198

   60 Statement_1_1_1_1_1: Statement_1_1_1_1_1_1_1_1 .

    $default  reduce using rule 60 (Statement_1_1_1_1_1)


state 199

   63 Statement_1_1_1_1_1_1_1_1: Otherwise . END

    END  shift, and go to state 220


state 200

   61 Statement_1_1_1_1_1: CaseClause . Statement_1_1_1_1_1

    END              shift, and go to state 195
    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    OTHERWISE        shift, and go to state 196
    '('              shift, and go to state 76

    Statement_1_1_1_1_1        go to state 221
    Statement_1_1_1_1_1_1_1_1  go to state 198
    Otherwise                  go to state 199
    CaseClause                 go to state 200
    Clause                     go to state 201
    Primary                    go to state 202
    Name                       go to state 102
    FuncCall                   go to state 103


state 201

   75 CaseClause: Clause . ':' Statement ';'

    ':'  shift, and go to state 222


state 202

   76 Clause: Primary .
   77       | Primary . RANGE Primary

    RANGE  shift, and go to state 223

    $default  reduce using rule 76 (Clause)


state 203

   43 Statement: WHILE Expression DO Statement .

    $default  reduce using rule 43 (Statement)


state 204

   70 Statement_1: Expression ')' .

    $default  reduce using rule 70 (Statement_1)


state 205

   71 Statement_1: Expression ',' . Statement_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Statement_1   go to state 224
    Expression    go to state 157
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 206

  104 Primary: PRED '(' Expression ')' .

    $default  reduce using rule 104 (Primary)


state 207

  107 Primary: ORD '(' Expression ')' .

    $default  reduce using rule 107 (Primary)


state 208

   65 Statement_1_1_1_1: Statement ';' Statement_1_1_1_1 .

    $default  reduce using rule 65 (Statement_1_1_1_1)


state 209

  105 Primary: SUCC '(' Expression ')' .

    $default  reduce using rule 105 (Primary)


state 210

  116 FuncCall_1_1: Expression ')' .

    $default  reduce using rule 116 (FuncCall_1_1)


state 211

  117 FuncCall_1_1: Expression ',' . FuncCall_1_1

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 168
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103
    FuncCall_1_1  go to state 225


state 212

   30 FuncsAndProcs: FUNCTION Name OptionalParams ':' Name ';' Consts . TypesRule Dclns Body Name ';'

    TYPE  shift, and go to state 13

    $default  reduce using rule 3 (TypesRule)

    TypesRule  go to state 226


state 213

   29 FuncsAndProcs: PROCEDURE Name OptionalParams ';' Consts TypesRule Dclns . Body Name ';'

    BEGINX  shift, and go to state 47

    Body  go to state 227


state 214

   69 Statement_1_1: ELSE . Statement

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body       go to state 77
    Statement  go to state 228
    Primary    go to state 80
    Name       go to state 81
    FuncCall   go to state 82


state 215

   42 Statement: IF Expression THEN Statement Statement_1_1 .

    $default  reduce using rule 42 (Statement)


state 216

   59 Statement_1_1_1_1_1_1: Name ',' Statement_1_1_1_1_1_1 .

    $default  reduce using rule 59 (Statement_1_1_1_1_1_1)


state 217

   48 Statement: FOR Name ASSIGNMENT Expression TO . Expression DO Statement

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 229
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 218

   49 Statement: FOR Name ASSIGNMENT Expression DOWNTO . Expression DO Statement

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    NOT              shift, and go to state 93
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76
    '+'              shift, and go to state 94
    '-'              shift, and go to state 95

    Expression    go to state 230
    Term          go to state 97
    ModAndMulDiv  go to state 98
    Unary         go to state 99
    Misc          go to state 100
    Primary       go to state 101
    Name          go to state 102
    FuncCall      go to state 103


state 219

   72 Otherwise: OTHERWISE Statement . Otherwise_1

    ';'  shift, and go to state 231

    $default  reduce using rule 73 (Otherwise_1)

    Otherwise_1  go to state 232


state 220

   63 Statement_1_1_1_1_1_1_1_1: Otherwise END .

    $default  reduce using rule 63 (Statement_1_1_1_1_1_1_1_1)


state 221

   61 Statement_1_1_1_1_1: CaseClause Statement_1_1_1_1_1 .

    $default  reduce using rule 61 (Statement_1_1_1_1_1)


state 222

   75 CaseClause: Clause ':' . Statement ';'

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body       go to state 77
    Statement  go to state 233
    Primary    go to state 80
    Name       go to state 81
    FuncCall   go to state 82


state 223

   77 Clause: Primary RANGE . Primary

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    CAPIDENTIFIER    shift, and go to state 4
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    Primary   go to state 234
    Name      go to state 102
    FuncCall  go to state 103


state 224

   71 Statement_1: Expression ',' Statement_1 .

    $default  reduce using rule 71 (Statement_1)


state 225

  117 FuncCall_1_1: Expression ',' FuncCall_1_1 .

    $default  reduce using rule 117 (FuncCall_1_1)


state 226

   30 FuncsAndProcs: FUNCTION Name OptionalParams ':' Name ';' Consts TypesRule . Dclns Body Name ';'

    VAR  shift, and go to state 20

    $default  reduce using rule 12 (Dclns)

    Dclns  go to state 235


state 227

   29 FuncsAndProcs: PROCEDURE Name OptionalParams ';' Consts TypesRule Dclns Body . Name ';'

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Name  go to state 236


state 228

   69 Statement_1_1: ELSE Statement .

    $default  reduce using rule 69 (Statement_1_1)


state 229

   48 Statement: FOR Name ASSIGNMENT Expression TO Expression . DO Statement

    DO  shift, and go to state 237


state 230

   49 Statement: FOR Name ASSIGNMENT Expression DOWNTO Expression . DO Statement

    DO  shift, and go to state 238


state 231

   74 Otherwise_1: ';' .

    $default  reduce using rule 74 (Otherwise_1)


state 232

   72 Otherwise: OTHERWISE Statement Otherwise_1 .

    $default  reduce using rule 72 (Otherwise)


state 233

   75 CaseClause: Clause ':' Statement . ';'

    ';'  shift, and go to state 239


state 234

   77 Clause: Primary RANGE Primary .

    $default  reduce using rule 77 (Clause)


state 235

   30 FuncsAndProcs: FUNCTION Name OptionalParams ':' Name ';' Consts TypesRule Dclns . Body Name ';'

    BEGINX  shift, and go to state 47

    Body  go to state 240


state 236

   29 FuncsAndProcs: PROCEDURE Name OptionalParams ';' Consts TypesRule Dclns Body Name . ';'

    ';'  shift, and go to state 241


state 237

   48 Statement: FOR Name ASSIGNMENT Expression TO Expression DO . Statement

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body       go to state 77
    Statement  go to state 242
    Primary    go to state 80
    Name       go to state 81
    FuncCall   go to state 82


state 238

   49 Statement: FOR Name ASSIGNMENT Expression DOWNTO Expression DO . Statement

    IDENTIFIER       shift, and go to state 3
    CHR              shift, and go to state 58
    IF               shift, and go to state 59
    CHARACTER_ALPHA  shift, and go to state 60
    STR_ALPHA        shift, and go to state 61
    READ             shift, and go to state 62
    REPEAT           shift, and go to state 63
    RETURN           shift, and go to state 64
    CAPIDENTIFIER    shift, and go to state 4
    FOR              shift, and go to state 65
    CASE             shift, and go to state 66
    WHILE            shift, and go to state 67
    OUTPUT           shift, and go to state 68
    EXIT             shift, and go to state 69
    Eof              shift, and go to state 70
    PRED             shift, and go to state 71
    BEGINX           shift, and go to state 47
    ORD              shift, and go to state 72
    INTEGER_NUM      shift, and go to state 73
    LOOP             shift, and go to state 74
    SUCC             shift, and go to state 75
    '('              shift, and go to state 76

    $default  reduce using rule 55 (Statement)

    Body       go to state 77
    Statement  go to state 243
    Primary    go to state 80
    Name       go to state 81
    FuncCall   go to state 82


state 239

   75 CaseClause: Clause ':' Statement ';' .

    $default  reduce using rule 75 (CaseClause)


state 240

   30 FuncsAndProcs: FUNCTION Name OptionalParams ':' Name ';' Consts TypesRule Dclns Body . Name ';'

    IDENTIFIER     shift, and go to state 3
    CAPIDENTIFIER  shift, and go to state 4

    Name  go to state 244


state 241

   29 FuncsAndProcs: PROCEDURE Name OptionalParams ';' Consts TypesRule Dclns Body Name ';' .

    $default  reduce using rule 29 (FuncsAndProcs)


state 242

   48 Statement: FOR Name ASSIGNMENT Expression TO Expression DO Statement .

    $default  reduce using rule 48 (Statement)


state 243

   49 Statement: FOR Name ASSIGNMENT Expression DOWNTO Expression DO Statement .

    $default  reduce using rule 49 (Statement)


state 244

   30 FuncsAndProcs: FUNCTION Name OptionalParams ':' Name ';' Consts TypesRule Dclns Body Name . ';'

    ';'  shift, and go to state 245


state 245

   30 FuncsAndProcs: FUNCTION Name OptionalParams ':' Name ';' Consts TypesRule Dclns Body Name ';' .

    $default  reduce using rule 30 (FuncsAndProcs)
