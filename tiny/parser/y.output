State 51 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce
State 54 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 89 conflicts: 1 shift/reduce


Grammar

    0 $accept: Tiny $end

    1 Tiny: PROGRAM Name ':' Dclns Body Name '.'

    2 Dclns: VAR Dclns_1
    3      | /* empty */

    4 Dclns_1: /* empty */
    5        | Dcln ';' Dclns_1

    6 Dcln: Dcln_1

    7 Dcln_1: Name ':' Type
    8       | Name ',' Dcln_1

    9 Type: INTEGER
   10     | BOOLEAN

   11 Body: BEGINX Body_1

   12 Body_1: Statement END
   13       | Statement ';' Body_1

   14 Statement: Name ASSIGNMENT Expression
   15          | OUTPUT '(' Expression ')'
   16          | IF Expression THEN Statement Statement_1
   17          | WHILE Expression DO Statement
   18          | Body
   19          | /* empty */

   20 Statement_1: /* empty */
   21            | ELSE Statement

   22 Expression: Term
   23           | Term GT Term
   24           | Term LT Term
   25           | Term GTE Term
   26           | Term NE Term
   27           | Term EQ Term
   28           | Term LTE Term

   29 Term: OrModAnd
   30     | Term '+' OrModAnd
   31     | Term '-' OrModAnd

   32 OrModAnd: MulDiv
   33         | OrModAnd OR MulDiv
   34         | OrModAnd MOD MulDiv
   35         | OrModAnd AND MulDiv

   36 MulDiv: Primary
   37       | MulDiv '*' Primary
   38       | MulDiv '/' Primary

   39 Primary: NOT Primary
   40        | '+' Primary
   41        | '-' Primary
   42        | Primary POW Primary
   43        | READ
   44        | Name
   45        | TRUE
   46        | FALSE
   47        | INTEGER_NUM
   48        | '(' Expression ')'

   49 Name: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 48
')' (41) 15 48
'*' (42) 37
'+' (43) 30 40
',' (44) 8
'-' (45) 31 41
'.' (46) 1
'/' (47) 38
':' (58) 1 7
';' (59) 5 13
error (256)
END (258) 12
FALSE (259) 46
VAR (260) 2
IDENTIFIER (261) 49
POW (262) 42
IF (263) 16
READ (264) 43
ELSE (265) 21
THEN (266) 16
NE (267) 26
MOD (268) 34
GT (269) 23
EQ (270) 27
WHILE (271) 17
OUTPUT (272) 15
GTE (273) 25
NOT (274) 39
DO (275) 17
BEGINX (276) 11
BOOLEAN (277) 10
INTEGER_NUM (278) 47
TRUE (279) 45
AND (280) 35
INTEGER (281) 9
LTE (282) 28
OR (283) 33
LT (284) 24
ASSIGNMENT (285) 14
PROGRAM (286) 1


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
Tiny (43)
    on left: 1, on right: 0
Dclns (44)
    on left: 2 3, on right: 1
Dclns_1 (45)
    on left: 4 5, on right: 2 5
Dcln (46)
    on left: 6, on right: 5
Dcln_1 (47)
    on left: 7 8, on right: 6 8
Type (48)
    on left: 9 10, on right: 7
Body (49)
    on left: 11, on right: 1 18
Body_1 (50)
    on left: 12 13, on right: 11 13
Statement (51)
    on left: 14 15 16 17 18 19, on right: 12 13 16 17 21
Statement_1 (52)
    on left: 20 21, on right: 16
Expression (53)
    on left: 22 23 24 25 26 27 28, on right: 14 15 16 17 48
Term (54)
    on left: 29 30 31, on right: 22 23 24 25 26 27 28 30 31
OrModAnd (55)
    on left: 32 33 34 35, on right: 29 30 31 33 34 35
MulDiv (56)
    on left: 36 37 38, on right: 32 33 34 35 37 38
Primary (57)
    on left: 39 40 41 42 43 44 45 46 47 48, on right: 36 37 38 39 40
    41 42
Name (58)
    on left: 49, on right: 1 7 8 14 44


state 0

    0 $accept: . Tiny $end

    PROGRAM  shift, and go to state 1

    Tiny  go to state 2


state 1

    1 Tiny: PROGRAM . Name ':' Dclns Body Name '.'

    IDENTIFIER  shift, and go to state 3

    Name  go to state 4


state 2

    0 $accept: Tiny . $end

    $end  shift, and go to state 5


state 3

   49 Name: IDENTIFIER .

    $default  reduce using rule 49 (Name)


state 4

    1 Tiny: PROGRAM Name . ':' Dclns Body Name '.'

    ':'  shift, and go to state 6


state 5

    0 $accept: Tiny $end .

    $default  accept


state 6

    1 Tiny: PROGRAM Name ':' . Dclns Body Name '.'

    VAR  shift, and go to state 7

    $default  reduce using rule 3 (Dclns)

    Dclns  go to state 8


state 7

    2 Dclns: VAR . Dclns_1

    IDENTIFIER  shift, and go to state 3

    $default  reduce using rule 4 (Dclns_1)

    Dclns_1  go to state 9
    Dcln     go to state 10
    Dcln_1   go to state 11
    Name     go to state 12


state 8

    1 Tiny: PROGRAM Name ':' Dclns . Body Name '.'

    BEGINX  shift, and go to state 13

    Body  go to state 14


state 9

    2 Dclns: VAR Dclns_1 .

    $default  reduce using rule 2 (Dclns)


state 10

    5 Dclns_1: Dcln . ';' Dclns_1

    ';'  shift, and go to state 15


state 11

    6 Dcln: Dcln_1 .

    $default  reduce using rule 6 (Dcln)


state 12

    7 Dcln_1: Name . ':' Type
    8       | Name . ',' Dcln_1

    ':'  shift, and go to state 16
    ','  shift, and go to state 17


state 13

   11 Body: BEGINX . Body_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    OUTPUT      shift, and go to state 20
    BEGINX      shift, and go to state 13

    $default  reduce using rule 19 (Statement)

    Body       go to state 21
    Body_1     go to state 22
    Statement  go to state 23
    Name       go to state 24


state 14

    1 Tiny: PROGRAM Name ':' Dclns Body . Name '.'

    IDENTIFIER  shift, and go to state 3

    Name  go to state 25


state 15

    5 Dclns_1: Dcln ';' . Dclns_1

    IDENTIFIER  shift, and go to state 3

    $default  reduce using rule 4 (Dclns_1)

    Dclns_1  go to state 26
    Dcln     go to state 10
    Dcln_1   go to state 11
    Name     go to state 12


state 16

    7 Dcln_1: Name ':' . Type

    BOOLEAN  shift, and go to state 27
    INTEGER  shift, and go to state 28

    Type  go to state 29


state 17

    8 Dcln_1: Name ',' . Dcln_1

    IDENTIFIER  shift, and go to state 3

    Dcln_1  go to state 30
    Name    go to state 12


state 18

   16 Statement: IF . Expression THEN Statement Statement_1

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Expression  go to state 39
    Term        go to state 40
    OrModAnd    go to state 41
    MulDiv      go to state 42
    Primary     go to state 43
    Name        go to state 44


state 19

   17 Statement: WHILE . Expression DO Statement

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Expression  go to state 45
    Term        go to state 40
    OrModAnd    go to state 41
    MulDiv      go to state 42
    Primary     go to state 43
    Name        go to state 44


state 20

   15 Statement: OUTPUT . '(' Expression ')'

    '('  shift, and go to state 46


state 21

   18 Statement: Body .

    $default  reduce using rule 18 (Statement)


state 22

   11 Body: BEGINX Body_1 .

    $default  reduce using rule 11 (Body)


state 23

   12 Body_1: Statement . END
   13       | Statement . ';' Body_1

    END  shift, and go to state 47
    ';'  shift, and go to state 48


state 24

   14 Statement: Name . ASSIGNMENT Expression

    ASSIGNMENT  shift, and go to state 49


state 25

    1 Tiny: PROGRAM Name ':' Dclns Body Name . '.'

    '.'  shift, and go to state 50


state 26

    5 Dclns_1: Dcln ';' Dclns_1 .

    $default  reduce using rule 5 (Dclns_1)


state 27

   10 Type: BOOLEAN .

    $default  reduce using rule 10 (Type)


state 28

    9 Type: INTEGER .

    $default  reduce using rule 9 (Type)


state 29

    7 Dcln_1: Name ':' Type .

    $default  reduce using rule 7 (Dcln_1)


state 30

    8 Dcln_1: Name ',' Dcln_1 .

    $default  reduce using rule 8 (Dcln_1)


state 31

   46 Primary: FALSE .

    $default  reduce using rule 46 (Primary)


state 32

   43 Primary: READ .

    $default  reduce using rule 43 (Primary)


state 33

   39 Primary: NOT . Primary

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Primary  go to state 51
    Name     go to state 44


state 34

   47 Primary: INTEGER_NUM .

    $default  reduce using rule 47 (Primary)


state 35

   45 Primary: TRUE .

    $default  reduce using rule 45 (Primary)


state 36

   48 Primary: '(' . Expression ')'

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Expression  go to state 52
    Term        go to state 40
    OrModAnd    go to state 41
    MulDiv      go to state 42
    Primary     go to state 43
    Name        go to state 44


state 37

   40 Primary: '+' . Primary

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Primary  go to state 53
    Name     go to state 44


state 38

   41 Primary: '-' . Primary

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Primary  go to state 54
    Name     go to state 44


state 39

   16 Statement: IF Expression . THEN Statement Statement_1

    THEN  shift, and go to state 55


state 40

   22 Expression: Term .
   23           | Term . GT Term
   24           | Term . LT Term
   25           | Term . GTE Term
   26           | Term . NE Term
   27           | Term . EQ Term
   28           | Term . LTE Term
   30 Term: Term . '+' OrModAnd
   31     | Term . '-' OrModAnd

    NE   shift, and go to state 56
    GT   shift, and go to state 57
    EQ   shift, and go to state 58
    GTE  shift, and go to state 59
    LTE  shift, and go to state 60
    LT   shift, and go to state 61
    '+'  shift, and go to state 62
    '-'  shift, and go to state 63

    $default  reduce using rule 22 (Expression)


state 41

   29 Term: OrModAnd .
   33 OrModAnd: OrModAnd . OR MulDiv
   34         | OrModAnd . MOD MulDiv
   35         | OrModAnd . AND MulDiv

    MOD  shift, and go to state 64
    AND  shift, and go to state 65
    OR   shift, and go to state 66

    $default  reduce using rule 29 (Term)


state 42

   32 OrModAnd: MulDiv .
   37 MulDiv: MulDiv . '*' Primary
   38       | MulDiv . '/' Primary

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 32 (OrModAnd)


state 43

   36 MulDiv: Primary .
   42 Primary: Primary . POW Primary

    POW  shift, and go to state 69

    $default  reduce using rule 36 (MulDiv)


state 44

   44 Primary: Name .

    $default  reduce using rule 44 (Primary)


state 45

   17 Statement: WHILE Expression . DO Statement

    DO  shift, and go to state 70


state 46

   15 Statement: OUTPUT '(' . Expression ')'

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Expression  go to state 71
    Term        go to state 40
    OrModAnd    go to state 41
    MulDiv      go to state 42
    Primary     go to state 43
    Name        go to state 44


state 47

   12 Body_1: Statement END .

    $default  reduce using rule 12 (Body_1)


state 48

   13 Body_1: Statement ';' . Body_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    OUTPUT      shift, and go to state 20
    BEGINX      shift, and go to state 13

    $default  reduce using rule 19 (Statement)

    Body       go to state 21
    Body_1     go to state 72
    Statement  go to state 23
    Name       go to state 24


state 49

   14 Statement: Name ASSIGNMENT . Expression

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Expression  go to state 73
    Term        go to state 40
    OrModAnd    go to state 41
    MulDiv      go to state 42
    Primary     go to state 43
    Name        go to state 44


state 50

    1 Tiny: PROGRAM Name ':' Dclns Body Name '.' .

    $default  reduce using rule 1 (Tiny)


state 51

   39 Primary: NOT Primary .
   42        | Primary . POW Primary

    POW  shift, and go to state 69

    POW       [reduce using rule 39 (Primary)]
    $default  reduce using rule 39 (Primary)


state 52

   48 Primary: '(' Expression . ')'

    ')'  shift, and go to state 74


state 53

   40 Primary: '+' Primary .
   42        | Primary . POW Primary

    POW  shift, and go to state 69

    POW       [reduce using rule 40 (Primary)]
    $default  reduce using rule 40 (Primary)


state 54

   41 Primary: '-' Primary .
   42        | Primary . POW Primary

    POW  shift, and go to state 69

    POW       [reduce using rule 41 (Primary)]
    $default  reduce using rule 41 (Primary)


state 55

   16 Statement: IF Expression THEN . Statement Statement_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    OUTPUT      shift, and go to state 20
    BEGINX      shift, and go to state 13

    $default  reduce using rule 19 (Statement)

    Body       go to state 21
    Statement  go to state 75
    Name       go to state 24


state 56

   26 Expression: Term NE . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Term      go to state 76
    OrModAnd  go to state 41
    MulDiv    go to state 42
    Primary   go to state 43
    Name      go to state 44


state 57

   23 Expression: Term GT . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Term      go to state 77
    OrModAnd  go to state 41
    MulDiv    go to state 42
    Primary   go to state 43
    Name      go to state 44


state 58

   27 Expression: Term EQ . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Term      go to state 78
    OrModAnd  go to state 41
    MulDiv    go to state 42
    Primary   go to state 43
    Name      go to state 44


state 59

   25 Expression: Term GTE . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Term      go to state 79
    OrModAnd  go to state 41
    MulDiv    go to state 42
    Primary   go to state 43
    Name      go to state 44


state 60

   28 Expression: Term LTE . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Term      go to state 80
    OrModAnd  go to state 41
    MulDiv    go to state 42
    Primary   go to state 43
    Name      go to state 44


state 61

   24 Expression: Term LT . Term

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Term      go to state 81
    OrModAnd  go to state 41
    MulDiv    go to state 42
    Primary   go to state 43
    Name      go to state 44


state 62

   30 Term: Term '+' . OrModAnd

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    OrModAnd  go to state 82
    MulDiv    go to state 42
    Primary   go to state 43
    Name      go to state 44


state 63

   31 Term: Term '-' . OrModAnd

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    OrModAnd  go to state 83
    MulDiv    go to state 42
    Primary   go to state 43
    Name      go to state 44


state 64

   34 OrModAnd: OrModAnd MOD . MulDiv

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    MulDiv   go to state 84
    Primary  go to state 43
    Name     go to state 44


state 65

   35 OrModAnd: OrModAnd AND . MulDiv

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    MulDiv   go to state 85
    Primary  go to state 43
    Name     go to state 44


state 66

   33 OrModAnd: OrModAnd OR . MulDiv

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    MulDiv   go to state 86
    Primary  go to state 43
    Name     go to state 44


state 67

   37 MulDiv: MulDiv '*' . Primary

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Primary  go to state 87
    Name     go to state 44


state 68

   38 MulDiv: MulDiv '/' . Primary

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Primary  go to state 88
    Name     go to state 44


state 69

   42 Primary: Primary POW . Primary

    FALSE        shift, and go to state 31
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 32
    NOT          shift, and go to state 33
    INTEGER_NUM  shift, and go to state 34
    TRUE         shift, and go to state 35
    '('          shift, and go to state 36
    '+'          shift, and go to state 37
    '-'          shift, and go to state 38

    Primary  go to state 89
    Name     go to state 44


state 70

   17 Statement: WHILE Expression DO . Statement

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    OUTPUT      shift, and go to state 20
    BEGINX      shift, and go to state 13

    $default  reduce using rule 19 (Statement)

    Body       go to state 21
    Statement  go to state 90
    Name       go to state 24


state 71

   15 Statement: OUTPUT '(' Expression . ')'

    ')'  shift, and go to state 91


state 72

   13 Body_1: Statement ';' Body_1 .

    $default  reduce using rule 13 (Body_1)


state 73

   14 Statement: Name ASSIGNMENT Expression .

    $default  reduce using rule 14 (Statement)


state 74

   48 Primary: '(' Expression ')' .

    $default  reduce using rule 48 (Primary)


state 75

   16 Statement: IF Expression THEN Statement . Statement_1

    ELSE  shift, and go to state 92

    ELSE      [reduce using rule 20 (Statement_1)]
    $default  reduce using rule 20 (Statement_1)

    Statement_1  go to state 93


state 76

   26 Expression: Term NE Term .
   30 Term: Term . '+' OrModAnd
   31     | Term . '-' OrModAnd

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63

    $default  reduce using rule 26 (Expression)


state 77

   23 Expression: Term GT Term .
   30 Term: Term . '+' OrModAnd
   31     | Term . '-' OrModAnd

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63

    $default  reduce using rule 23 (Expression)


state 78

   27 Expression: Term EQ Term .
   30 Term: Term . '+' OrModAnd
   31     | Term . '-' OrModAnd

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63

    $default  reduce using rule 27 (Expression)


state 79

   25 Expression: Term GTE Term .
   30 Term: Term . '+' OrModAnd
   31     | Term . '-' OrModAnd

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63

    $default  reduce using rule 25 (Expression)


state 80

   28 Expression: Term LTE Term .
   30 Term: Term . '+' OrModAnd
   31     | Term . '-' OrModAnd

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63

    $default  reduce using rule 28 (Expression)


state 81

   24 Expression: Term LT Term .
   30 Term: Term . '+' OrModAnd
   31     | Term . '-' OrModAnd

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63

    $default  reduce using rule 24 (Expression)


state 82

   30 Term: Term '+' OrModAnd .
   33 OrModAnd: OrModAnd . OR MulDiv
   34         | OrModAnd . MOD MulDiv
   35         | OrModAnd . AND MulDiv

    MOD  shift, and go to state 64
    AND  shift, and go to state 65
    OR   shift, and go to state 66

    $default  reduce using rule 30 (Term)


state 83

   31 Term: Term '-' OrModAnd .
   33 OrModAnd: OrModAnd . OR MulDiv
   34         | OrModAnd . MOD MulDiv
   35         | OrModAnd . AND MulDiv

    MOD  shift, and go to state 64
    AND  shift, and go to state 65
    OR   shift, and go to state 66

    $default  reduce using rule 31 (Term)


state 84

   34 OrModAnd: OrModAnd MOD MulDiv .
   37 MulDiv: MulDiv . '*' Primary
   38       | MulDiv . '/' Primary

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 34 (OrModAnd)


state 85

   35 OrModAnd: OrModAnd AND MulDiv .
   37 MulDiv: MulDiv . '*' Primary
   38       | MulDiv . '/' Primary

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 35 (OrModAnd)


state 86

   33 OrModAnd: OrModAnd OR MulDiv .
   37 MulDiv: MulDiv . '*' Primary
   38       | MulDiv . '/' Primary

    '*'  shift, and go to state 67
    '/'  shift, and go to state 68

    $default  reduce using rule 33 (OrModAnd)


state 87

   37 MulDiv: MulDiv '*' Primary .
   42 Primary: Primary . POW Primary

    POW  shift, and go to state 69

    $default  reduce using rule 37 (MulDiv)


state 88

   38 MulDiv: MulDiv '/' Primary .
   42 Primary: Primary . POW Primary

    POW  shift, and go to state 69

    $default  reduce using rule 38 (MulDiv)


state 89

   42 Primary: Primary . POW Primary
   42        | Primary POW Primary .

    POW  shift, and go to state 69

    POW       [reduce using rule 42 (Primary)]
    $default  reduce using rule 42 (Primary)


state 90

   17 Statement: WHILE Expression DO Statement .

    $default  reduce using rule 17 (Statement)


state 91

   15 Statement: OUTPUT '(' Expression ')' .

    $default  reduce using rule 15 (Statement)


state 92

   21 Statement_1: ELSE . Statement

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    WHILE       shift, and go to state 19
    OUTPUT      shift, and go to state 20
    BEGINX      shift, and go to state 13

    $default  reduce using rule 19 (Statement)

    Body       go to state 21
    Statement  go to state 94
    Name       go to state 24


state 93

   16 Statement: IF Expression THEN Statement Statement_1 .

    $default  reduce using rule 16 (Statement)


state 94

   21 Statement_1: ELSE Statement .

    $default  reduce using rule 21 (Statement_1)
