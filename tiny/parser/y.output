State 97 conflicts: 1 shift/reduce


Grammar

    0 $accept: Tiny $end

    1 Tiny: PROGRAM Name ':' Dclns Body Name '.'

    2 Dclns: VAR Dclns_1
    3      | /* empty */

    4 Dclns_1: /* empty */
    5        | Dcln ';' Dclns_1

    6 Dcln: Dcln_1

    7 Dcln_1: Name ':' Type
    8       | Name ',' Dcln_1

    9 Type: INTEGER
   10     | BOOLEAN

   11 Body: BEGINX Body_1

   12 Body_1: Statement END
   13       | Statement ';' Body_1

   14 Statement: Name ASSIGNMENT Expression
   15          | OUTPUT '(' Statement_1
   16          | IF Expression THEN Statement Statement_1_1
   17          | WHILE Expression DO Statement
   18          | REPEAT Statement_1_1_1
   19          | LOOP Statement_1_1_1_1
   20          | EXIT
   21          | Name EQSWAP Name
   22          | FOR Name ASSIGNMENT Expression TO Expression DO Statement
   23          | CASE Expression OF Statement_1_1_1_1_1
   24          | Body
   25          | /* empty */

   26 Statement_1_1_1_1_1: Statement_1_1_1_1_1_1
   27                    | CaseClause Statement_1_1_1_1_1

   28 Statement_1_1_1_1_1_1: END
   29                      | Otherwise END

   30 Statement_1_1_1_1: Statement POOL
   31                  | Statement ';' Statement_1_1_1_1

   32 Statement_1_1_1: Statement UNTIL Expression
   33                | Statement ';' Statement_1_1_1

   34 Statement_1_1: /* empty */
   35              | ELSE Statement

   36 Statement_1: Expression ')'
   37            | Expression ',' Statement_1

   38 Otherwise: OTHERWISE Statement Otherwise_1

   39 Otherwise_1: /* empty */
   40            | ';'

   41 CaseClause: Clause ':' Statement ';'

   42 Clause: Primary
   43       | Primary RANGE Primary

   44 Expression: Term
   45           | Term GT Term
   46           | Term LT Term
   47           | Term GTE Term
   48           | Term NE Term
   49           | Term EQ Term
   50           | Term LTE Term

   51 Term: ModAndMulDiv
   52     | ModAndMulDiv OR Term
   53     | ModAndMulDiv '+' Term
   54     | ModAndMulDiv '-' Term

   55 ModAndMulDiv: Unary
   56             | Unary MOD ModAndMulDiv
   57             | Unary AND ModAndMulDiv
   58             | Unary '*' ModAndMulDiv
   59             | Unary '/' ModAndMulDiv

   60 Unary: Misc
   61      | NOT Unary
   62      | '+' Unary
   63      | '-' Unary

   64 Misc: Primary
   65     | Primary POW Misc

   66 Primary: READ
   67        | Eof
   68        | Name
   69        | TRUE
   70        | FALSE
   71        | INTEGER_NUM
   72        | '(' Expression ')'

   73 Name: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 72
')' (41) 36 72
'*' (42) 58
'+' (43) 53 62
',' (44) 8 37
'-' (45) 54 63
'.' (46) 1
'/' (47) 59
':' (58) 1 7 41
';' (59) 5 13 31 33 40 41
error (256)
END (258) 12 28 29
FALSE (259) 70
TO (260) 22
EQSWAP (261) 21
VAR (262) 2
IDENTIFIER (263) 73
POW (264) 65
POOL (265) 30
IF (266) 16
READ (267) 66
REPEAT (268) 18
RANGE (269) 43
ELSE (270) 35
UNTIL (271) 32
FOR (272) 22
THEN (273) 16
OF (274) 23
NE (275) 48
MOD (276) 56
GT (277) 45
CASE (278) 23
EQ (279) 49
WHILE (280) 17
OUTPUT (281) 15
EXIT (282) 20
Eof (283) 67
GTE (284) 47
NOT (285) 61
DO (286) 17 22
BEGINX (287) 11
BOOLEAN (288) 10
INTEGER_NUM (289) 71
TRUE (290) 69
AND (291) 57
INTEGER (292) 9
LTE (293) 50
LOOP (294) 19
OR (295) 52
LT (296) 46
OTHERWISE (297) 38
ASSIGNMENT (298) 14 22
PROGRAM (299) 1


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
Tiny (56)
    on left: 1, on right: 0
Dclns (57)
    on left: 2 3, on right: 1
Dclns_1 (58)
    on left: 4 5, on right: 2 5
Dcln (59)
    on left: 6, on right: 5
Dcln_1 (60)
    on left: 7 8, on right: 6 8
Type (61)
    on left: 9 10, on right: 7
Body (62)
    on left: 11, on right: 1 24
Body_1 (63)
    on left: 12 13, on right: 11 13
Statement (64)
    on left: 14 15 16 17 18 19 20 21 22 23 24 25, on right: 12 13 16
    17 22 30 31 32 33 35 38 41
Statement_1_1_1_1_1 (65)
    on left: 26 27, on right: 23 27
Statement_1_1_1_1_1_1 (66)
    on left: 28 29, on right: 26
Statement_1_1_1_1 (67)
    on left: 30 31, on right: 19 31
Statement_1_1_1 (68)
    on left: 32 33, on right: 18 33
Statement_1_1 (69)
    on left: 34 35, on right: 16
Statement_1 (70)
    on left: 36 37, on right: 15 37
Otherwise (71)
    on left: 38, on right: 29
Otherwise_1 (72)
    on left: 39 40, on right: 38
CaseClause (73)
    on left: 41, on right: 27
Clause (74)
    on left: 42 43, on right: 41
Expression (75)
    on left: 44 45 46 47 48 49 50, on right: 14 16 17 22 23 32 36 37
    72
Term (76)
    on left: 51 52 53 54, on right: 44 45 46 47 48 49 50 52 53 54
ModAndMulDiv (77)
    on left: 55 56 57 58 59, on right: 51 52 53 54 56 57 58 59
Unary (78)
    on left: 60 61 62 63, on right: 55 56 57 58 59 61 62 63
Misc (79)
    on left: 64 65, on right: 60 65
Primary (80)
    on left: 66 67 68 69 70 71 72, on right: 42 43 64 65
Name (81)
    on left: 73, on right: 1 7 8 14 21 22 68


state 0

    0 $accept: . Tiny $end

    PROGRAM  shift, and go to state 1

    Tiny  go to state 2


state 1

    1 Tiny: PROGRAM . Name ':' Dclns Body Name '.'

    IDENTIFIER  shift, and go to state 3

    Name  go to state 4


state 2

    0 $accept: Tiny . $end

    $end  shift, and go to state 5


state 3

   73 Name: IDENTIFIER .

    $default  reduce using rule 73 (Name)


state 4

    1 Tiny: PROGRAM Name . ':' Dclns Body Name '.'

    ':'  shift, and go to state 6


state 5

    0 $accept: Tiny $end .

    $default  accept


state 6

    1 Tiny: PROGRAM Name ':' . Dclns Body Name '.'

    VAR  shift, and go to state 7

    $default  reduce using rule 3 (Dclns)

    Dclns  go to state 8


state 7

    2 Dclns: VAR . Dclns_1

    IDENTIFIER  shift, and go to state 3

    $default  reduce using rule 4 (Dclns_1)

    Dclns_1  go to state 9
    Dcln     go to state 10
    Dcln_1   go to state 11
    Name     go to state 12


state 8

    1 Tiny: PROGRAM Name ':' Dclns . Body Name '.'

    BEGINX  shift, and go to state 13

    Body  go to state 14


state 9

    2 Dclns: VAR Dclns_1 .

    $default  reduce using rule 2 (Dclns)


state 10

    5 Dclns_1: Dcln . ';' Dclns_1

    ';'  shift, and go to state 15


state 11

    6 Dcln: Dcln_1 .

    $default  reduce using rule 6 (Dcln)


state 12

    7 Dcln_1: Name . ':' Type
    8       | Name . ',' Dcln_1

    ':'  shift, and go to state 16
    ','  shift, and go to state 17


state 13

   11 Body: BEGINX . Body_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body       go to state 26
    Body_1     go to state 27
    Statement  go to state 28
    Name       go to state 29


state 14

    1 Tiny: PROGRAM Name ':' Dclns Body . Name '.'

    IDENTIFIER  shift, and go to state 3

    Name  go to state 30


state 15

    5 Dclns_1: Dcln ';' . Dclns_1

    IDENTIFIER  shift, and go to state 3

    $default  reduce using rule 4 (Dclns_1)

    Dclns_1  go to state 31
    Dcln     go to state 10
    Dcln_1   go to state 11
    Name     go to state 12


state 16

    7 Dcln_1: Name ':' . Type

    BOOLEAN  shift, and go to state 32
    INTEGER  shift, and go to state 33

    Type  go to state 34


state 17

    8 Dcln_1: Name ',' . Dcln_1

    IDENTIFIER  shift, and go to state 3

    Dcln_1  go to state 35
    Name    go to state 12


state 18

   16 Statement: IF . Expression THEN Statement Statement_1_1

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Expression    go to state 45
    Term          go to state 46
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 19

   18 Statement: REPEAT . Statement_1_1_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body             go to state 26
    Statement        go to state 52
    Statement_1_1_1  go to state 53
    Name             go to state 29


state 20

   22 Statement: FOR . Name ASSIGNMENT Expression TO Expression DO Statement

    IDENTIFIER  shift, and go to state 3

    Name  go to state 54


state 21

   23 Statement: CASE . Expression OF Statement_1_1_1_1_1

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Expression    go to state 55
    Term          go to state 46
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 22

   17 Statement: WHILE . Expression DO Statement

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Expression    go to state 56
    Term          go to state 46
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 23

   15 Statement: OUTPUT . '(' Statement_1

    '('  shift, and go to state 57


state 24

   20 Statement: EXIT .

    $default  reduce using rule 20 (Statement)


state 25

   19 Statement: LOOP . Statement_1_1_1_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body               go to state 26
    Statement          go to state 58
    Statement_1_1_1_1  go to state 59
    Name               go to state 29


state 26

   24 Statement: Body .

    $default  reduce using rule 24 (Statement)


state 27

   11 Body: BEGINX Body_1 .

    $default  reduce using rule 11 (Body)


state 28

   12 Body_1: Statement . END
   13       | Statement . ';' Body_1

    END  shift, and go to state 60
    ';'  shift, and go to state 61


state 29

   14 Statement: Name . ASSIGNMENT Expression
   21          | Name . EQSWAP Name

    EQSWAP      shift, and go to state 62
    ASSIGNMENT  shift, and go to state 63


state 30

    1 Tiny: PROGRAM Name ':' Dclns Body Name . '.'

    '.'  shift, and go to state 64


state 31

    5 Dclns_1: Dcln ';' Dclns_1 .

    $default  reduce using rule 5 (Dclns_1)


state 32

   10 Type: BOOLEAN .

    $default  reduce using rule 10 (Type)


state 33

    9 Type: INTEGER .

    $default  reduce using rule 9 (Type)


state 34

    7 Dcln_1: Name ':' Type .

    $default  reduce using rule 7 (Dcln_1)


state 35

    8 Dcln_1: Name ',' Dcln_1 .

    $default  reduce using rule 8 (Dcln_1)


state 36

   70 Primary: FALSE .

    $default  reduce using rule 70 (Primary)


state 37

   66 Primary: READ .

    $default  reduce using rule 66 (Primary)


state 38

   67 Primary: Eof .

    $default  reduce using rule 67 (Primary)


state 39

   61 Unary: NOT . Unary

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Unary    go to state 65
    Misc     go to state 49
    Primary  go to state 50
    Name     go to state 51


state 40

   71 Primary: INTEGER_NUM .

    $default  reduce using rule 71 (Primary)


state 41

   69 Primary: TRUE .

    $default  reduce using rule 69 (Primary)


state 42

   72 Primary: '(' . Expression ')'

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Expression    go to state 66
    Term          go to state 46
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 43

   62 Unary: '+' . Unary

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Unary    go to state 67
    Misc     go to state 49
    Primary  go to state 50
    Name     go to state 51


state 44

   63 Unary: '-' . Unary

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Unary    go to state 68
    Misc     go to state 49
    Primary  go to state 50
    Name     go to state 51


state 45

   16 Statement: IF Expression . THEN Statement Statement_1_1

    THEN  shift, and go to state 69


state 46

   44 Expression: Term .
   45           | Term . GT Term
   46           | Term . LT Term
   47           | Term . GTE Term
   48           | Term . NE Term
   49           | Term . EQ Term
   50           | Term . LTE Term

    NE   shift, and go to state 70
    GT   shift, and go to state 71
    EQ   shift, and go to state 72
    GTE  shift, and go to state 73
    LTE  shift, and go to state 74
    LT   shift, and go to state 75

    $default  reduce using rule 44 (Expression)


state 47

   51 Term: ModAndMulDiv .
   52     | ModAndMulDiv . OR Term
   53     | ModAndMulDiv . '+' Term
   54     | ModAndMulDiv . '-' Term

    OR   shift, and go to state 76
    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    $default  reduce using rule 51 (Term)


state 48

   55 ModAndMulDiv: Unary .
   56             | Unary . MOD ModAndMulDiv
   57             | Unary . AND ModAndMulDiv
   58             | Unary . '*' ModAndMulDiv
   59             | Unary . '/' ModAndMulDiv

    MOD  shift, and go to state 79
    AND  shift, and go to state 80
    '*'  shift, and go to state 81
    '/'  shift, and go to state 82

    $default  reduce using rule 55 (ModAndMulDiv)


state 49

   60 Unary: Misc .

    $default  reduce using rule 60 (Unary)


state 50

   64 Misc: Primary .
   65     | Primary . POW Misc

    POW  shift, and go to state 83

    $default  reduce using rule 64 (Misc)


state 51

   68 Primary: Name .

    $default  reduce using rule 68 (Primary)


state 52

   32 Statement_1_1_1: Statement . UNTIL Expression
   33                | Statement . ';' Statement_1_1_1

    UNTIL  shift, and go to state 84
    ';'    shift, and go to state 85


state 53

   18 Statement: REPEAT Statement_1_1_1 .

    $default  reduce using rule 18 (Statement)


state 54

   22 Statement: FOR Name . ASSIGNMENT Expression TO Expression DO Statement

    ASSIGNMENT  shift, and go to state 86


state 55

   23 Statement: CASE Expression . OF Statement_1_1_1_1_1

    OF  shift, and go to state 87


state 56

   17 Statement: WHILE Expression . DO Statement

    DO  shift, and go to state 88


state 57

   15 Statement: OUTPUT '(' . Statement_1

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Statement_1   go to state 89
    Expression    go to state 90
    Term          go to state 46
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 58

   30 Statement_1_1_1_1: Statement . POOL
   31                  | Statement . ';' Statement_1_1_1_1

    POOL  shift, and go to state 91
    ';'   shift, and go to state 92


state 59

   19 Statement: LOOP Statement_1_1_1_1 .

    $default  reduce using rule 19 (Statement)


state 60

   12 Body_1: Statement END .

    $default  reduce using rule 12 (Body_1)


state 61

   13 Body_1: Statement ';' . Body_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body       go to state 26
    Body_1     go to state 93
    Statement  go to state 28
    Name       go to state 29


state 62

   21 Statement: Name EQSWAP . Name

    IDENTIFIER  shift, and go to state 3

    Name  go to state 94


state 63

   14 Statement: Name ASSIGNMENT . Expression

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Expression    go to state 95
    Term          go to state 46
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 64

    1 Tiny: PROGRAM Name ':' Dclns Body Name '.' .

    $default  reduce using rule 1 (Tiny)


state 65

   61 Unary: NOT Unary .

    $default  reduce using rule 61 (Unary)


state 66

   72 Primary: '(' Expression . ')'

    ')'  shift, and go to state 96


state 67

   62 Unary: '+' Unary .

    $default  reduce using rule 62 (Unary)


state 68

   63 Unary: '-' Unary .

    $default  reduce using rule 63 (Unary)


state 69

   16 Statement: IF Expression THEN . Statement Statement_1_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body       go to state 26
    Statement  go to state 97
    Name       go to state 29


state 70

   48 Expression: Term NE . Term

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Term          go to state 98
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 71

   45 Expression: Term GT . Term

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Term          go to state 99
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 72

   49 Expression: Term EQ . Term

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Term          go to state 100
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 73

   47 Expression: Term GTE . Term

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Term          go to state 101
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 74

   50 Expression: Term LTE . Term

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Term          go to state 102
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 75

   46 Expression: Term LT . Term

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Term          go to state 103
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 76

   52 Term: ModAndMulDiv OR . Term

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Term          go to state 104
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 77

   53 Term: ModAndMulDiv '+' . Term

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Term          go to state 105
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 78

   54 Term: ModAndMulDiv '-' . Term

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Term          go to state 106
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 79

   56 ModAndMulDiv: Unary MOD . ModAndMulDiv

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    ModAndMulDiv  go to state 107
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 80

   57 ModAndMulDiv: Unary AND . ModAndMulDiv

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    ModAndMulDiv  go to state 108
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 81

   58 ModAndMulDiv: Unary '*' . ModAndMulDiv

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    ModAndMulDiv  go to state 109
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 82

   59 ModAndMulDiv: Unary '/' . ModAndMulDiv

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    ModAndMulDiv  go to state 110
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 83

   65 Misc: Primary POW . Misc

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42

    Misc     go to state 111
    Primary  go to state 50
    Name     go to state 51


state 84

   32 Statement_1_1_1: Statement UNTIL . Expression

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Expression    go to state 112
    Term          go to state 46
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 85

   33 Statement_1_1_1: Statement ';' . Statement_1_1_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body             go to state 26
    Statement        go to state 52
    Statement_1_1_1  go to state 113
    Name             go to state 29


state 86

   22 Statement: FOR Name ASSIGNMENT . Expression TO Expression DO Statement

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Expression    go to state 114
    Term          go to state 46
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 87

   23 Statement: CASE Expression OF . Statement_1_1_1_1_1

    END          shift, and go to state 115
    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    OTHERWISE    shift, and go to state 116
    '('          shift, and go to state 42

    Statement_1_1_1_1_1    go to state 117
    Statement_1_1_1_1_1_1  go to state 118
    Otherwise              go to state 119
    CaseClause             go to state 120
    Clause                 go to state 121
    Primary                go to state 122
    Name                   go to state 51


state 88

   17 Statement: WHILE Expression DO . Statement

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body       go to state 26
    Statement  go to state 123
    Name       go to state 29


state 89

   15 Statement: OUTPUT '(' Statement_1 .

    $default  reduce using rule 15 (Statement)


state 90

   36 Statement_1: Expression . ')'
   37            | Expression . ',' Statement_1

    ','  shift, and go to state 124
    ')'  shift, and go to state 125


state 91

   30 Statement_1_1_1_1: Statement POOL .

    $default  reduce using rule 30 (Statement_1_1_1_1)


state 92

   31 Statement_1_1_1_1: Statement ';' . Statement_1_1_1_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body               go to state 26
    Statement          go to state 58
    Statement_1_1_1_1  go to state 126
    Name               go to state 29


state 93

   13 Body_1: Statement ';' Body_1 .

    $default  reduce using rule 13 (Body_1)


state 94

   21 Statement: Name EQSWAP Name .

    $default  reduce using rule 21 (Statement)


state 95

   14 Statement: Name ASSIGNMENT Expression .

    $default  reduce using rule 14 (Statement)


state 96

   72 Primary: '(' Expression ')' .

    $default  reduce using rule 72 (Primary)


state 97

   16 Statement: IF Expression THEN Statement . Statement_1_1

    ELSE  shift, and go to state 127

    ELSE      [reduce using rule 34 (Statement_1_1)]
    $default  reduce using rule 34 (Statement_1_1)

    Statement_1_1  go to state 128


state 98

   48 Expression: Term NE Term .

    $default  reduce using rule 48 (Expression)


state 99

   45 Expression: Term GT Term .

    $default  reduce using rule 45 (Expression)


state 100

   49 Expression: Term EQ Term .

    $default  reduce using rule 49 (Expression)


state 101

   47 Expression: Term GTE Term .

    $default  reduce using rule 47 (Expression)


state 102

   50 Expression: Term LTE Term .

    $default  reduce using rule 50 (Expression)


state 103

   46 Expression: Term LT Term .

    $default  reduce using rule 46 (Expression)


state 104

   52 Term: ModAndMulDiv OR Term .

    $default  reduce using rule 52 (Term)


state 105

   53 Term: ModAndMulDiv '+' Term .

    $default  reduce using rule 53 (Term)


state 106

   54 Term: ModAndMulDiv '-' Term .

    $default  reduce using rule 54 (Term)


state 107

   56 ModAndMulDiv: Unary MOD ModAndMulDiv .

    $default  reduce using rule 56 (ModAndMulDiv)


state 108

   57 ModAndMulDiv: Unary AND ModAndMulDiv .

    $default  reduce using rule 57 (ModAndMulDiv)


state 109

   58 ModAndMulDiv: Unary '*' ModAndMulDiv .

    $default  reduce using rule 58 (ModAndMulDiv)


state 110

   59 ModAndMulDiv: Unary '/' ModAndMulDiv .

    $default  reduce using rule 59 (ModAndMulDiv)


state 111

   65 Misc: Primary POW Misc .

    $default  reduce using rule 65 (Misc)


state 112

   32 Statement_1_1_1: Statement UNTIL Expression .

    $default  reduce using rule 32 (Statement_1_1_1)


state 113

   33 Statement_1_1_1: Statement ';' Statement_1_1_1 .

    $default  reduce using rule 33 (Statement_1_1_1)


state 114

   22 Statement: FOR Name ASSIGNMENT Expression . TO Expression DO Statement

    TO  shift, and go to state 129


state 115

   28 Statement_1_1_1_1_1_1: END .

    $default  reduce using rule 28 (Statement_1_1_1_1_1_1)


state 116

   38 Otherwise: OTHERWISE . Statement Otherwise_1

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body       go to state 26
    Statement  go to state 130
    Name       go to state 29


state 117

   23 Statement: CASE Expression OF Statement_1_1_1_1_1 .

    $default  reduce using rule 23 (Statement)


state 118

   26 Statement_1_1_1_1_1: Statement_1_1_1_1_1_1 .

    $default  reduce using rule 26 (Statement_1_1_1_1_1)


state 119

   29 Statement_1_1_1_1_1_1: Otherwise . END

    END  shift, and go to state 131


state 120

   27 Statement_1_1_1_1_1: CaseClause . Statement_1_1_1_1_1

    END          shift, and go to state 115
    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    OTHERWISE    shift, and go to state 116
    '('          shift, and go to state 42

    Statement_1_1_1_1_1    go to state 132
    Statement_1_1_1_1_1_1  go to state 118
    Otherwise              go to state 119
    CaseClause             go to state 120
    Clause                 go to state 121
    Primary                go to state 122
    Name                   go to state 51


state 121

   41 CaseClause: Clause . ':' Statement ';'

    ':'  shift, and go to state 133


state 122

   42 Clause: Primary .
   43       | Primary . RANGE Primary

    RANGE  shift, and go to state 134

    $default  reduce using rule 42 (Clause)


state 123

   17 Statement: WHILE Expression DO Statement .

    $default  reduce using rule 17 (Statement)


state 124

   37 Statement_1: Expression ',' . Statement_1

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Statement_1   go to state 135
    Expression    go to state 90
    Term          go to state 46
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 125

   36 Statement_1: Expression ')' .

    $default  reduce using rule 36 (Statement_1)


state 126

   31 Statement_1_1_1_1: Statement ';' Statement_1_1_1_1 .

    $default  reduce using rule 31 (Statement_1_1_1_1)


state 127

   35 Statement_1_1: ELSE . Statement

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body       go to state 26
    Statement  go to state 136
    Name       go to state 29


state 128

   16 Statement: IF Expression THEN Statement Statement_1_1 .

    $default  reduce using rule 16 (Statement)


state 129

   22 Statement: FOR Name ASSIGNMENT Expression TO . Expression DO Statement

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    NOT          shift, and go to state 39
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42
    '+'          shift, and go to state 43
    '-'          shift, and go to state 44

    Expression    go to state 137
    Term          go to state 46
    ModAndMulDiv  go to state 47
    Unary         go to state 48
    Misc          go to state 49
    Primary       go to state 50
    Name          go to state 51


state 130

   38 Otherwise: OTHERWISE Statement . Otherwise_1

    ';'  shift, and go to state 138

    $default  reduce using rule 39 (Otherwise_1)

    Otherwise_1  go to state 139


state 131

   29 Statement_1_1_1_1_1_1: Otherwise END .

    $default  reduce using rule 29 (Statement_1_1_1_1_1_1)


state 132

   27 Statement_1_1_1_1_1: CaseClause Statement_1_1_1_1_1 .

    $default  reduce using rule 27 (Statement_1_1_1_1_1)


state 133

   41 CaseClause: Clause ':' . Statement ';'

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body       go to state 26
    Statement  go to state 140
    Name       go to state 29


state 134

   43 Clause: Primary RANGE . Primary

    FALSE        shift, and go to state 36
    IDENTIFIER   shift, and go to state 3
    READ         shift, and go to state 37
    Eof          shift, and go to state 38
    INTEGER_NUM  shift, and go to state 40
    TRUE         shift, and go to state 41
    '('          shift, and go to state 42

    Primary  go to state 141
    Name     go to state 51


state 135

   37 Statement_1: Expression ',' Statement_1 .

    $default  reduce using rule 37 (Statement_1)


state 136

   35 Statement_1_1: ELSE Statement .

    $default  reduce using rule 35 (Statement_1_1)


state 137

   22 Statement: FOR Name ASSIGNMENT Expression TO Expression . DO Statement

    DO  shift, and go to state 142


state 138

   40 Otherwise_1: ';' .

    $default  reduce using rule 40 (Otherwise_1)


state 139

   38 Otherwise: OTHERWISE Statement Otherwise_1 .

    $default  reduce using rule 38 (Otherwise)


state 140

   41 CaseClause: Clause ':' Statement . ';'

    ';'  shift, and go to state 143


state 141

   43 Clause: Primary RANGE Primary .

    $default  reduce using rule 43 (Clause)


state 142

   22 Statement: FOR Name ASSIGNMENT Expression TO Expression DO . Statement

    IDENTIFIER  shift, and go to state 3
    IF          shift, and go to state 18
    REPEAT      shift, and go to state 19
    FOR         shift, and go to state 20
    CASE        shift, and go to state 21
    WHILE       shift, and go to state 22
    OUTPUT      shift, and go to state 23
    EXIT        shift, and go to state 24
    BEGINX      shift, and go to state 13
    LOOP        shift, and go to state 25

    $default  reduce using rule 25 (Statement)

    Body       go to state 26
    Statement  go to state 144
    Name       go to state 29


state 143

   41 CaseClause: Clause ':' Statement ';' .

    $default  reduce using rule 41 (CaseClause)


state 144

   22 Statement: FOR Name ASSIGNMENT Expression TO Expression DO Statement .

    $default  reduce using rule 22 (Statement)
